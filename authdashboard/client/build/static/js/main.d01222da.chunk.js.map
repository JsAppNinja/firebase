{"version":3,"sources":["components/auth/BaseLogin.jsx","components/auth/Login.jsx","components/auth/Register.js","components/auth/OLSSRegister.js","components/auth/OLSMERegister.js","components/auth/OLSLMRegister.js","components/auth/OLSPRegister.js","components/navigation/NavMenu.js","components/dashboard/Home.js","App.js","serviceWorker.js","index.js"],"names":["Title","Typography","BaseLogin","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","console","log","getFieldDecorator","this","react_default","a","createElement","card","es_form","onSubmit","className","style","padding-bottom","text-align","level","Item","rules","required","message","input","prefix","icon","type","color","placeholder","valuePropName","initialValue","es_checkbox","href","es_button","htmlType","Component","Login","WrappedLogin","Form","create","name","position","top","left","marginTop","marginLeft","radioStyle","display","height","lineHeight","getFormType","Register","state","value","onChange","target","setState","textAlign","Register_Title","es_radio","Group","react_router_dom","to","size","marginRight","Option","Select","AutoCompleteOption","AutoComplete","RegistrationForm","confirmDirty","autoCompleteResult","radioValue0","validateFieldsAndScroll","handleConfirmBlur","setDate","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","handleWebsiteChange","map","domain","concat","tailFormItemLayout","wrapperCol","xs","span","offset","sm","es_select","width","website","key","marginBottom","Object","assign","labelCol","label","hasFeedback","validator","Password","onBlur","tooltip","title","whitespace","date_picker","time_picker","use12Hours","format","React","WrappedRegistrationForm","setFieldsValue","radio","radioValidator","OLSMERegister_Option","OLSMERegister_AutoCompleteOption","OLSLMRegister_Option","OLSLMRegister_AutoCompleteOption","OLSLMRegister","OLSPRegister_Option","OLSPRegister_AutoCompleteOption","OLSPRegister","Sider","Layout","Header","Content","Footer","NavMenu","Menu","SubMenu","collapsed","onCollapse","collapsible","theme","menu","defaultSelectedKeys","mode","Home","layout","minHeight","NavMenu_NavMenu","Home_Header","background","padding","Home_Content","margin","breadcrumb","Home_Footer","App","react_router","exact","path","component","OLSSRegister","OLSMERegister","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d01222da.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport '../../styles/css/login.css';\n\nconst { Title } = Typography;\n\nexport default class BaseLogin extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Card>\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n          <div style={{\"padding-bottom\": \"50px\", \"text-align\": \"center\"}}>\n            <Title level={3}>OLS.onelightsystem Meditation</Title>\n          </div>\n          <Form.Item>\n            {getFieldDecorator('username', {\n              rules: [{ required: true, message: 'Please input your username!' }],\n            })(\n              <Input\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                placeholder=\"Username\"\n              />,\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('password', {\n              rules: [{ required: true, message: 'Please input your Password!' }],\n            })(\n              <Input\n                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />,\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('remember', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(<Checkbox>Remember me</Checkbox>)}\n            <a className=\"login-form-forgot\" href=\"\">\n              Forgot password\n            </a>\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n              Log in\n            </Button>\n            Or <a href=\"/register\">register now!</a>\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\n\n// Custom components\nimport BaseLogin from './BaseLogin';\n\nexport default class Login extends Component {\n  render() {\n    const WrappedLogin = Form.create({ name: 'login' })(BaseLogin);\n\n    return (\n      <div style={{position: \"absolute\", top: \"50%\" ,left: \"50%\", \"marginTop\": \"-350px\", \"marginLeft\": \"-225px\"}}>\n        <WrappedLogin /> \n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Card, Radio, Input, Button, Typography } from 'antd';\nimport { Link } from \"react-router-dom\"; \n\nconst { Title } = Typography;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nconst getFormType = [\"/olssregister\", \"/olsmeregister\", \"/olslmregister\", \"/olspregister\"]\n\nexport default class Register extends Component {\n  state = {\n    value: 0,\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  getAccountType() {\n\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div style={{position: \"absolute\", top: \"50%\" ,left: \"50%\", \"marginTop\": \"-350px\", \"marginLeft\": \"-225px\"}}>\n        <Card style={{ display: \"inline-flex\" }}>\n          <div>\n            <div style={{\"textAlign\": \"center\"}}>\n              <Title level={3}>Select an account type</Title>\n            </div>\n            <br />\n            <Radio.Group onChange={this.onChange} value={this.state.value}>\n              <Radio style={radioStyle} value={0}>\n                OLS Student (INTRO)\n              </Radio>\n              <Radio style={radioStyle} value={1}>\n                OLSME (Public 3 months free, corporates/government fees)\n              </Radio>\n              <Radio style={radioStyle} value={2}>\n                OLS LM Investor equity holder\n              </Radio>\n              <Radio style={radioStyle} value={3}>\n                OLS Promoter %\n              </Radio>\n            </Radio.Group>\n          </div>\n          <br />\n          <div style={{ \"textAlign\": \"center\" }}>\n            <Link to={getFormType[this.state.value]}>\n              <Button type=\"primary\" size=\"large\" style={{\"marginRight\": 20}}>Next</Button>\n            </Link>\n            <Link to=\"/\">\n              <Button size=\"large\">Back</Button>\n            </Link>\n          </div>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport {\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker\n} from 'antd';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(\"TODO\");\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    return (\n      <div style={{position: \"absolute\", top: \"50%\" ,left: \"50%\", \"marginTop\": \"-350px\", \"marginLeft\": \"-650px\"}}>\n      <Card style={{ width: 1300, marginBottom: 60 }}>\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"E-mail\">\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Password\" hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n            ],\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Name&nbsp;\n              <Tooltip title=\"First and Last Name?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('Name', {\n            rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Onelightsystem OLS experience&nbsp;\n            </span>\n          }\n        >\n          {getFieldDecorator('experience', {\n            rules: [{ required: true, message: 'Please input your experience!', whitespace: true }],\n            })(\n              <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                <Radio style={radioStyle} value={1}>\n                  New User\n                </Radio>\n                <Radio style={radioStyle} value={2}>\n                  Received 1 ols introduction before\n                </Radio>\n                <Radio style={radioStyle} value={3}>\n                  PAST INITI.ATED\n                </Radio>\n                <Radio style={radioStyle} value={4}>\n                  Have received a personal invitation\n                </Radio>\n                <Radio style={radioStyle} value={5}>\n                  Yes (describe in the next part2 ols promoter -/+% referral )\n                </Radio>\n                <Radio style={radioStyle} value={6}>\n                  Other...\n                  {this.state.value === 6 ? <Input style={{ width: 100, marginLeft: 10 }} /> : null}\n                </Radio>\n              </Radio.Group>\n            )\n          }\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              OLS Teacher/Instructor&nbsp;\n              <Tooltip title=\"Each has it is own exchange measurement evaluation protocols to determinate proper ols* service fee energy exchange.\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('instructor', {\n            rules: [{ required: true, message: 'Please select an instructor!', whitespace: true }],\n            })(\n              <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                <Radio style={radioStyle} value={1}>\n                  Nazar Asvitlo OLS aste. eae master teacher Nazar CA USA, UA Pankiv\n                </Radio>\n                <Radio style={radioStyle} value={2}>\n                  Rei-Wen Ho (OLS* inu. inustructo) 教员 CA USA\n                </Radio>\n              </Radio.Group>\n            )\n          }\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              How did you find out about OLS&nbsp;\n              <Tooltip title=\"OLS promoter - ref. ?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('Reference', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Your LOCATION (country, city/town)&nbsp;\n              <Tooltip title=\"Determines OLS service value fee* CA$190, Bay Area CA $240 (USA average $160); the rest of countries (Quality of Life GDP value assessment)\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('location', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Your Age&nbsp;\n              <Tooltip title=\"Ages 6-12 require a parent\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('age', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Meditation Experience&nbsp;\n            </span>\n          }\n        >\n          {getFieldDecorator('experience', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Any Health Issues?&nbsp;\n            </span>\n          }\n        >\n          {getFieldDecorator('health', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              How soon can you start?&nbsp;\n            </span>\n          }\n        >\n          {getFieldDecorator('start', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(\n              <DatePicker onChange={this.setDate} />\n            )\n          }\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              What is a convenient time to receive OLS INTRO. / INITI?&nbsp;\n            </span>\n          }\n        >\n          {getFieldDecorator('start', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(\n              <TimePicker use12Hours format=\"h:mm a\"/>\n            )\n          }\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Supportive (perks) evaluation credits?&nbsp;\n            </span>\n          }\n        >\n          <div>\n            <Checkbox>Had prior OLS experience?! leave a review on <a href=\"https://goo.gl/7tsW6L\">google</a></Checkbox>\n            <br />\n          <Checkbox>Had prior OLS experience?! leave a review on our <a href=\"https://goo.gl/dhbvmX\">lessons</a></Checkbox>\n            <br />\n          <Checkbox>Followed us on <a href=\"https://www.crunchbase.com/organization/onelightsystem-ols\">CrunchBase</a></Checkbox>\n            <br />\n          <Checkbox>Followed us on <a href=\"https://www.linkedin.com/company/one-light-system/\">LinkedIn</a></Checkbox>\n            <br />\n          <Checkbox>Followed us on <a href=\"https://www.owler.com/company/ols-med\">Owler and Weight</a></Checkbox>\n            <br />\n          <Checkbox>Took our class on <a href=\"https://www.udemy.com/onelightsystem-olsm/?instructorPreviewMode=guest\">Udemy</a></Checkbox>\n            <br />\n          <Checkbox>Liked our <a href=\"https://www.facebook.com/onelightsystem/\">Facebook</a> page</Checkbox>\n            <br />\n          <Checkbox>Took our OLS subscription <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfbLCi3OIfYXxriI1ddYm0ekzfFYpqhpExnheEyNUY2FfnEqw/viewform\">survey</a></Checkbox>\n            <br />\n          <Checkbox>I can offer something else</Checkbox>\n            <br />\n          <Checkbox>Used valid crypto currencies to pay for OLS service fees</Checkbox>\n            <br />\n          <Checkbox>I will create videos on the OLS experience</Checkbox>\n            <br />\n          <Checkbox>Other: </Checkbox><Input style={{ width: 100, marginLeft: 10 }}/>\n          </div>\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          {getFieldDecorator('agreement', {\n            valuePropName: 'checked',\n          })(\n            <Checkbox>\n              I have read and agreed to the <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">terms of service</a>\n            </Checkbox>,\n          )}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          {getFieldDecorator('agreement2', {\n            valuePropName: 'checked',\n          })(\n            <Checkbox>\n              All the information submitted in this form is true and correct\n            </Checkbox>,\n          )}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Link to=\"/home\">\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n          </Link>\n        </Form.Item>\n      </Form>\n      </Card>\n      </div>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\nexport default WrappedRegistrationForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport {\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker\n} from 'antd';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(\"TODO\");\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      radioValue0: e.target.value\n    });\n    this.props.form.setFieldsValue({radio:e.target.value})\n  };\n\n  radioValidator = (rule, value, callback) => {\n    if (!value) {\n      callback('Please input your experience!');\n    } else {\n      callback();\n    }\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n    console.log(this.state);\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    const test = this;\n\n    return (\n      <div style={{position: \"absolute\", top: \"50%\" ,left: \"50%\", \"marginTop\": \"-350px\", \"marginLeft\": \"-650px\"}}>\n      <Card style={{ width: 1300, marginBottom: 60 }}>\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"E-mail\">\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Password\" hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n            ],\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Name&nbsp;\n              <Tooltip title=\"First and Last Name?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('Name', {\n            rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Onelightsystem OLS experience&nbsp;\n            </span>\n          }\n        >\n          {getFieldDecorator('radio-experience', {\n            rules: [{ required: true, validator: this.radioValidator, whitespace: true }]\n            })(\n              <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                <Radio style={radioStyle} value={1}>\n                  New User\n                </Radio>\n                <Radio style={radioStyle} value={2}>\n                  Received 1 ols introduction before\n                </Radio>\n                <Radio style={radioStyle} value={3}>\n                  PAST INITI.ATED\n                </Radio>\n                <Radio style={radioStyle} value={4}>\n                  Have received a personal invitation\n                </Radio>\n                <Radio style={radioStyle} value={5}>\n                  Yes (describe in the next part2 ols promoter -/+% referral )\n                </Radio>\n                <Radio style={radioStyle} value={6}>\n                  Other...\n                  {this.state.radioValue0 === 6 ? <Input style={{ width: 100, marginLeft: 10 }} /> : null}\n                </Radio>\n              </Radio.Group>\n            )\n          }\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              How did you find out about OLS&nbsp;\n              <Tooltip title=\"OLS promoter - ref. ?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('Reference', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Your company name&nbsp;\n            </span>\n          }\n        >\n          {getFieldDecorator('company', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Your LOCATION (country, city/town)&nbsp;\n              <Tooltip title=\"Determines OLS service value fee* CA$190, Bay Area CA $240 (USA average $160); the rest of countries (Quality of Life GDP value assessment)\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('location', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Describe the reason why you are requesting OLSME training&nbsp;\n            </span>\n          }\n        >\n          {getFieldDecorator('reason', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Meditation Experience&nbsp;\n            </span>\n          }\n        >\n          {getFieldDecorator('experience', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Any Health Issues?&nbsp;\n            </span>\n          }\n        >\n          {getFieldDecorator('health', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              How soon can you start?&nbsp;\n            </span>\n          }\n        >\n          {getFieldDecorator('start', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(\n              <DatePicker onChange={this.setDate} />\n            )\n          }\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Supportive (perks) evaluation credits?&nbsp;\n            </span>\n          }\n        >\n          <div>\n            <Checkbox>Had prior OLS experience?! leave a review on <a href=\"https://goo.gl/7tsW6L\">google</a></Checkbox>\n            <br />\n          <Checkbox>Had prior OLS experience?! leave a review on our <a href=\"https://goo.gl/dhbvmX\">lessons</a></Checkbox>\n            <br />\n          <Checkbox>Followed us on <a href=\"https://www.crunchbase.com/organization/onelightsystem-ols\">CrunchBase</a></Checkbox>\n            <br />\n          <Checkbox>Followed us on <a href=\"https://www.linkedin.com/company/one-light-system/\">LinkedIn</a></Checkbox>\n            <br />\n          <Checkbox>Followed us on <a href=\"https://www.owler.com/company/ols-med\">Owler and Weight</a></Checkbox>\n            <br />\n          <Checkbox>Took our class on <a href=\"https://www.udemy.com/onelightsystem-olsm/?instructorPreviewMode=guest\">Udemy</a></Checkbox>\n            <br />\n          <Checkbox>Liked our <a href=\"https://www.facebook.com/onelightsystem/\">Facebook</a> page</Checkbox>\n            <br />\n          <Checkbox>Took our OLS subscription <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfbLCi3OIfYXxriI1ddYm0ekzfFYpqhpExnheEyNUY2FfnEqw/viewform\">survey</a></Checkbox>\n            <br />\n          <Checkbox>I can offer something else</Checkbox>\n            <br />\n          <Checkbox>Used valid crypto currencies to pay for OLS service fees</Checkbox>\n            <br />\n          <Checkbox>I will create videos on the OLS experience</Checkbox>\n            <br />\n          <Checkbox>Other: </Checkbox><Input style={{ width: 100, marginLeft: 10 }}/>\n          </div>\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          {getFieldDecorator('agreement', {\n            valuePropName: 'checked',\n          })(\n            <Checkbox>\n              I have read and agreed to the <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">terms of service</a>\n            </Checkbox>,\n          )}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          {getFieldDecorator('agreement2', {\n            valuePropName: 'checked',\n          })(\n            <Checkbox>\n              All the information submitted in this form is true and correct\n            </Checkbox>,\n          )}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Link to=\"/home\">\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n          </Link>\n        </Form.Item>\n      </Form>\n      </Card>\n      </div>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\nexport default WrappedRegistrationForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport {\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker\n} from 'antd';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(\"TODO\");\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      radioValue0: e.target.value\n    });\n    this.props.form.setFieldsValue({radio:e.target.value})\n  };\n\n  radioValidator = (rule, value, callback) => {\n    if (!value) {\n      callback('Please input your experience!');\n    } else {\n      callback();\n    }\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n    console.log(this.state);\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    const test = this;\n\n    return (\n      <div style={{position: \"absolute\", top: \"50%\" ,left: \"50%\", \"marginTop\": \"-350px\", \"marginLeft\": \"-650px\"}}>\n      <Card style={{ width: 1300, marginBottom: 60 }}>\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"E-mail\">\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Password\" hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n            ],\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Name&nbsp;\n              <Tooltip title=\"First and Last Name?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('Name', {\n            rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              How did you find out about OLS&nbsp;\n              <Tooltip title=\"OLS promoter - ref. ?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('Reference', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Supportive (perks) evaluation credits?&nbsp;\n            </span>\n          }\n        >\n          <div>\n            <Checkbox>Had prior OLS experience?! leave a review on <a href=\"https://goo.gl/7tsW6L\">google</a></Checkbox>\n            <br />\n          <Checkbox>Had prior OLS experience?! leave a review on our <a href=\"https://goo.gl/dhbvmX\">lessons</a></Checkbox>\n            <br />\n          <Checkbox>Followed us on <a href=\"https://www.crunchbase.com/organization/onelightsystem-ols\">CrunchBase</a></Checkbox>\n            <br />\n          <Checkbox>Followed us on <a href=\"https://www.linkedin.com/company/one-light-system/\">LinkedIn</a></Checkbox>\n            <br />\n          <Checkbox>Followed us on <a href=\"https://www.owler.com/company/ols-med\">Owler and Weight</a></Checkbox>\n            <br />\n          <Checkbox>Took our class on <a href=\"https://www.udemy.com/onelightsystem-olsm/?instructorPreviewMode=guest\">Udemy</a></Checkbox>\n            <br />\n          <Checkbox>Liked our <a href=\"https://www.facebook.com/onelightsystem/\">Facebook</a> page</Checkbox>\n            <br />\n          <Checkbox>Took our OLS subscription <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfbLCi3OIfYXxriI1ddYm0ekzfFYpqhpExnheEyNUY2FfnEqw/viewform\">survey</a></Checkbox>\n            <br />\n          <Checkbox>I can offer something else</Checkbox>\n            <br />\n          <Checkbox>Used valid crypto currencies to pay for OLS service fees</Checkbox>\n            <br />\n          <Checkbox>I will create videos on the OLS experience</Checkbox>\n            <br />\n          <Checkbox>Other: </Checkbox><Input style={{ width: 100, marginLeft: 10 }}/>\n          </div>\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          {getFieldDecorator('agreement', {\n            valuePropName: 'checked',\n          })(\n            <Checkbox>\n              I have read and agreed to the <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">terms of service</a>\n            </Checkbox>,\n          )}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          {getFieldDecorator('agreement2', {\n            valuePropName: 'checked',\n          })(\n            <Checkbox>\n              All the information submitted in this form is true and correct\n            </Checkbox>,\n          )}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Link to=\"/home\">\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n          </Link>\n        </Form.Item>\n      </Form>\n      </Card>\n      </div>\n    );\n  }\n}\n\nconst OLSLMRegister = Form.create({ name: 'register' })(RegistrationForm);\nexport default OLSLMRegister;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport {\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker\n} from 'antd';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(\"TODO\");\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      radioValue0: e.target.value\n    });\n    this.props.form.setFieldsValue({radio:e.target.value})\n  };\n\n  radioValidator = (rule, value, callback) => {\n    if (!value) {\n      callback('Please input your experience!');\n    } else {\n      callback();\n    }\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n    console.log(this.state);\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    const test = this;\n\n    return (\n      <div style={{position: \"absolute\", top: \"50%\" ,left: \"50%\", \"marginTop\": \"-350px\", \"marginLeft\": \"-675px\"}}>\n      <Card style={{ width: 1350, marginBottom: 60 }}>\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n        <Form.Item label=\"E-mail\">\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Password\" hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n            ],\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              Name&nbsp;\n              <Tooltip title=\"First and Last Name?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('Name', {\n            rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              How did you find out about OLS&nbsp;\n              <Tooltip title=\"OLS promoter - ref. ?\">\n                <Icon type=\"question-circle-o\" />\n              </Tooltip>\n            </span>\n          }\n        >\n          {getFieldDecorator('Reference', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              How many promotions have you completed in the last 90 days?&nbsp;\n            </span>\n          }\n        >\n          {getFieldDecorator('promotions', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item\n          label={\n            <span>\n              How many leads have you generated for OLS?&nbsp;\n            </span>\n          }\n        >\n          {getFieldDecorator('leads', {\n            rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          {getFieldDecorator('agreement', {\n            valuePropName: 'checked',\n          })(\n            <Checkbox>\n              I have read and agreed to the <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">terms of service</a>\n            </Checkbox>,\n          )}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          {getFieldDecorator('agreement2', {\n            valuePropName: 'checked',\n          })(\n            <Checkbox>\n              All the information submitted in this form is true and correct\n            </Checkbox>,\n          )}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Link to=\"/home\">\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n          </Link>\n        </Form.Item>\n      </Form>\n      </Card>\n      </div>\n    );\n  }\n}\n\nconst OLSPRegister = Form.create({ name: 'register' })(RegistrationForm);\nexport default OLSPRegister;\n","import React, { Component } from 'react';\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport default class NavMenu extends Component {\n  state = {\n    collapsed: true,\n  };\n\n  onCollapse = collapsed => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n\n  render() {\n    return (\n      <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse} theme=\"light\">\n        <div className=\"logo\" />\n        <Menu theme=\"light\" defaultSelectedKeys={['1']} mode=\"inline\">\n          <Menu.Item key=\"1\">\n            <Icon type=\"user\" />\n            <span>User</span>\n          </Menu.Item>\n          <Menu.Item key=\"2\">\n            <Icon type=\"file\" />\n            <span>File</span>\n          </Menu.Item>\n          <Menu.Item key=\"3\">\n            <Icon type=\"setting\" />\n            <span>Config</span>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\n\nimport NavMenu from \"../navigation/NavMenu\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport default class Home extends Component {\n  state = {\n    collapsed: true,\n  };\n\n  onCollapse = collapsed => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <NavMenu />\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }} />\n          <Content style={{ margin: '0 16px' }}>\n            <Breadcrumb style={{ margin: '16px 0' }}>\n              <Breadcrumb.Item>User</Breadcrumb.Item>\n              <Breadcrumb.Item>Test</Breadcrumb.Item>\n            </Breadcrumb>\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>OLS Test</div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>OLS ©2018</Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\n\n// Custom Components\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport OLSSRegister from './components/auth/OLSSRegister';\nimport OLSMERegister from './components/auth/OLSMERegister';\nimport OLSLMRegister from './components/auth/OLSLMRegister';\nimport OLSPRegister from './components/auth/OLSPRegister';\nimport Home from './components/dashboard/Home';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/olssregister\" component={OLSSRegister} />\n        <Route exact path=\"/olsmeregister\" component={OLSMERegister} />\n        <Route exact path=\"/olslmregister\" component={OLSLMRegister} />\n        <Route exact path=\"/olspregister\" component={OLSPRegister} />\n        <Route exact path=\"/home\" component={Home} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}