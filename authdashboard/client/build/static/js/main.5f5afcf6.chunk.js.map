{"version":3,"sources":["components/Firebase/FirebaseContext.js","components/Firebase/Firebase.js","components/Firebase/index.js","components/auth/Login.js","components/auth/Register.js","constants/ConstantsList.js","components/auth/OLSSRegister.js","components/auth/OLSMERegister.js","components/auth/OLSLMRegister.js","components/auth/OLSPRegister.js","components/auth/PasswordReset.js","components/navigation/NavMenu.js","components/dashboard/OLSStats.js","components/dashboard/OLSUpdates.js","components/dashboard/Profile.js","components/dashboard/Settings.js","components/dashboard/Home.js","components/privacy/Privacy.js","components/navigation/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","Object","classCallCheck","this","app","initializeApp","auth","db","firestore","dbUser","mainAccountType","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","currentUser","updatePassword","sendEmailVerification","data","accountType","uid","collection","doc","set","accountStatus","_this","concat","get","then","exists","console","log","type","Error","merge","Title","Typography","BaseLogin","handleSubmit","e","preventDefault","props","form","validateFields","err","values","firebase","signInUser","username","fetchUserData","catch","error","setState","context","getFieldDecorator","react_default","a","createElement","style","display","position","height","width","marginLeft","marginRight","marginTop","textAlign","card","es_form","onSubmit","className","paddingBottom","level","href","Item","rules","required","message","input","prefix","icon","color","placeholder","valuePropName","initialValue","es_checkbox","es_button","htmlType","Component","contextType","WrappedLogin","withRouter","Form","create","name","radioStyle","lineHeight","getFormType","Register","state","value","onChange","target","Register_Title","es_radio","Group","react_router_dom","to","size","ConstantsList","OLSS_COL","OLSLM_COL","OLSME_COL","OLSP_COL","Option","Select","AutoCompleteOption","AutoComplete","RegistrationForm","confirmDirty","autoCompleteResult","radioValue0","checkboxOther","checkboxOtherChecked","handleCheckboxOther","goLoginPage","history","push","validateFieldsAndScroll","reference","age","credits","health","loc","location","meditationexperience","olsexperience","teacher","start","format","agreement1","agreement2","createUser","promRes","user","Promise","all","createUserFireStore","addToUserList","Modal","success","title","content","handleConfirmBlur","setDate","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","validateRadio","handleWebsiteChange","map","domain","es_select","website","key","marginBottom","OLSSRegister_Title","label","hasFeedback","validator","Password","onBlur","tooltip","whitespace","input_number","date_picker","time_picker","use12Hours","checked","WrappedRegistrationForm","accounttype","setFieldsValue","radio","OLSMERegister_Option","OLSMERegister_AutoCompleteOption","OLSMERegister_Title","wrapperCol","xs","span","offset","sm","olslmaccounttype","OLSLMRegister_Option","OLSLMRegister_AutoCompleteOption","OLSLMRegister_Title","OLSLMRegister","olspaccounttype","OLSPRegister_Option","OLSPRegister_AutoCompleteOption","OLSPRegister_Title","OLSPRegister","BasePasswordReset","possibleConstructorReturn","getPrototypeOf","call","passwordReset","onOk","backToHomePage","bind","assertThisInitialized","PasswordReset_Option","PasswordReset_AutoCompleteOption","top","left","PasswordReset_Title","assign","labelCol","WrappedPasswordReset","Sider","Layout","Header","Content","Footer","NavMenu","Menu","SubMenu","onCollapse","collapsed","onMenuClick","val","signOutUser","collapsible","theme","menu","defaultSelectedKeys","mode","onClick","Profile","OLSUpdates","updateUserData","_this2","objectSpread","Profile_Option","Profile_AutoCompleteOption","background","moment","Settings","Home","layout","minHeight","NavMenu_NavMenu","Home_Header","padding","alignSelf","Home_Title","Home_Content","margin","breadcrumb","react_router","path","component","OLSStats","Home_Footer","Privacy","ProtectedRoute","_ref","authenticated","objectWithoutProperties","render","pathname","prevLocation","App","_Component","inherits","createClass","appThis","onAuthStateChanged","Firebase_FirebaseContext","Provider","exact","Login","OLSSRegister","OLSMERegister","PasswordReset","navigation_ProtectedRoute","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f5afcf6.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDIlmVETy3dJn4M2BiIFdgneT-suhpwYnE\",\n  authDomain: \"olsdata-550ld.firebaseapp.com\",\n  databaseURL: \"https://olsdata-550ld.firebaseio.com\",\n  projectId: \"olsdata-550ld\",\n  storageBucket: \"olsdata-550ld.appspot.com\",\n  messagingSenderId: \"482690254036\",\n  appId: \"1:482690254036:web:6f0ea140326ab07e\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.db = app.firestore();\n    this.dbUser = {};\n    this.mainAccountType = null;\n  }\n\n  // Auth\n  createUser(email, password) {\n    return this.auth.createUserWithEmailAndPassword(email, password);\n  }\n  \n  signInUser(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  signOutUser() {\n    this.auth.signOut();\n  }\n\n  passwordReset(email) {\n    return this.auth.sendPasswordResetEmail(email);\n  }\n\n  passwordUpdate(password) {\n    return this.auth.currentUser.updatePassword(password);\n  }\n \n  sendEmailVerification() {\n    return this.auth.currentUser.sendEmailVerification();\n  }\n\n  // Firestore\n  createUserFireStore(data, accountType, uid) {\n    return this.db.collection(accountType).doc(uid).set(data);\n  }\n\n  addToUserList(uid, accountStatus) {\n    return this.db.collection(\"userlist\").doc(uid).set(accountStatus);  \n  }\n\n  fetchUserData(uid) {\n    return this.db.doc(`userlist/${uid}`).get()\n      .then((doc) => {\n        if(doc.exists) {\n          console.log(doc.data())\n          \n          var type = doc.data().type;\n          this.mainAccountType = type;\n          return this.db.doc(`${type}/${uid}`).get()\n        } else {\n          throw new Error(\"Auth state changed before mainAccountType was fetched\");\n        }\n      })\n  }\n\n  updateUserData(data) {\n    return this.db.doc(`${this.mainAccountType}/${this.auth.currentUser.uid}`)\n      .set(data, { merge: true });\n  }\n}\n\nexport default Firebase;\n","import FirebaseContext from './FirebaseContext';\nimport Firebase from './Firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext };\n","import React, { Component } from 'react';\nimport { Card, Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport '../../styles/css/login.css';\nimport { FirebaseContext } from '../Firebase';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst { Title } = Typography;\n\nclass BaseLogin extends Component {\n  static contextType = FirebaseContext;\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        // Now authenticate user\n        this.firebase.signInUser(values.username, values.password)\n        .then(() => {\n          this.firebase.fetchUserData(this.firebase.auth.currentUser.uid)\n          .then((doc) => {\n            this.firebase.dbUser = doc.data();\n            console.log(\"Signed in\");\n          })\n        })\n        .catch(error => {\n          this.setState({ error });\n        });\n      } else {\n        console.log(\"Authentication Error\");\n      }\n    });\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div style={{display: \"table\", position: \"absolute\", height: \"100%\", width: \"100%\"}}>\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"100px\", textAlign: \"center\"}}>\n          <Card style={{display:\"inline-block\", textAlign: \"initial\"}}>\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n              <div style={{\"paddingBottom\": \"10px\", \"textAlign\": \"center\"}}>\n                <Title level={3}> <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">787.OLS onelightsystem Meditation® </a> </Title>\n              </div>\n              <Form.Item>\n                {getFieldDecorator('username', {\n                  rules: [{ required: true, message: 'Please input your username!' }],\n                })(\n                  <Input\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    placeholder=\"Username\"\n                  />,\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator('password', {\n                  rules: [{ required: true, message: 'Please input your Password!' }],\n                })(\n                  <Input\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  />,\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator('remember', {\n                  valuePropName: 'checked',\n                  initialValue: true,\n                })(<Checkbox>Remember me</Checkbox>)}\n                <a className=\"login-form-forgot\" href=\"/passwordreset\">\n                  Forgot password\n                </a>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                  Log in\n                </Button>\n                Or <a href=\"/register\">register [Beta]</a>\n              </Form.Item>\n            </Form>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedLogin = withRouter(Form.create({ name: 'login' })(BaseLogin));\nexport default WrappedLogin;\n","import React, { Component } from 'react';\nimport { Card, Radio, Input, Button, Typography } from 'antd';\nimport { Link } from \"react-router-dom\"; \n\nconst { Title } = Typography;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nconst getFormType = [\"/olssregister\", \"/olsmeregister\", \"/olslmregister\", \"/olspregister\"]\n\nexport default class Register extends Component {\n  state = {\n    value: 0,\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  getAccountType() {\n\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div style={{display: \"table\", position: \"absolute\", height: \"100%\", width: \"100%\"}}>\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"100px\", textAlign: \"center\"}}>\n          <Card style={{display:\"inline-block\", textAlign: \"initial\"}}>\n          <div>\n            <div style={{\"textAlign\": \"center\"}}>\n              <Title level={3}>Select an account type</Title>\n            </div>\n            <br />\n            <Radio.Group onChange={this.onChange} value={this.state.value}>\n              <Radio style={radioStyle} value={0}>\n                OLS Student (Intro and Initi assesment application)\n              </Radio>\n              <Radio style={radioStyle} value={1}>\n                OLSME user (Public 30 days free, corporates or government fees)\n              </Radio>\n              <Radio style={radioStyle} value={2}>\n                OLSLM (Investor or buyer)\n              </Radio>\n                <Radio style={radioStyle} value={3}>\n                OLS promoter (free account and other OLS sevices)\n              </Radio>\n            </Radio.Group>\n          </div>\n          <br />\n          <div style={{ \"textAlign\": \"center\" }}>\n            <Link to={getFormType[this.state.value]}>\n              <Button type=\"primary\" size=\"large\" style={{\"marginRight\": 20}}>Next</Button>\n            </Link>\n            <Link to=\"/\">\n              <Button size=\"large\">Back</Button>\n            </Link>\n          </div>\n        </Card>\n      </div>\n      </div>\n    );\n  }\n}\n","const ConstantsList = {\n  OLSS_COL: \"uOLSS\",\n  OLSLM_COL: \"uOLSLM\",\n  OLSME_COL: \"uOLSME\",\n  OLSP_COL: \"uOLSP\",\n};\n\nexport default ConstantsList;\n","import React from 'react';\nimport ReactDOM, { withRouter } from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport { FirebaseContext } from '../Firebase';\nimport ConstantsList from '../../constants/ConstantsList';\nimport {\n  Modal,\n  Form,\n  InputNumber,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker,\n  Typography\n} from 'antd';\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass RegistrationForm extends React.Component {\n  static contextType = FirebaseContext;\n\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1,\n    checkboxOther: \"\",\n    checkboxOtherChecked: false\n  };\n\n  handleCheckboxOther = e => {\n    console.log(e.target.value);\n    this.setState({ checkboxOther: e.target.value });\n \n    if(e.target.value) {\n      this.setState({ checkboxOtherChecked: true });\n      console.log(\"target value set\");\n    } else {\n      console.log(\"target value error\");\n    }\n  }\n\n  goLoginPage = e =>  {\n    this.props.history.push(\"/\");\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        // Prep Data\n        var data = {\n          name: values.name,\n          reference: values.reference,\n          age: values.age,\n          credits: values.credits,\n          health: values.health,\n          loc: values.location,\n          meditationexperience: values.meditationexperience,\n          olsexperience: values.olsexperience,\n          teacher: values.teacher,\n          start: values.start.format()\n        }\n \n        // Create user account\n        // Ensure user agreed with ToS\n        if(values.agreement1 && values.agreement2) {\n          this.firebase.createUser(values.email, values.password)\n          .then((promRes) => {\n            console.log(promRes.user.uid);\n            var user = promRes.user;\n            // Send email verification and add user data to database\n            return Promise.all([\n              this.firebase.sendEmailVerification(),\n              this.firebase.createUserFireStore(data, ConstantsList.OLSS_COL, user.uid),\n              this.firebase.addToUserList(user.uid, { type: ConstantsList.OLSS_COL })\n            ]);\n          })\n          .then((promRes) => {\n            //var userUid = promRes[2].uid;\n            //console.log(userUid);\n            //console.log(promRes[1].id); // Doc Ref\n            \n            this.firebase.fetchUserData(this.firebase.auth.currentUser.uid)\n            .then((doc) => {\n              this.firebase.dbUser = doc.data();\n              Modal.success({ title: \"Account Created!\", content: \"Your account has been successfully created. Please check your email to verify your account\" });\n            })\n          })\n          .catch(error => {\n            Modal.error({ title: \"Issue Creating Account\", content: error.message });\n            console.log(error); \n          });\n        }\n      } else {\n        console.log('Account creation error');\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(e);\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  validateRadio = (rule, value, callback) => {\n    const form = this.props.form;\n   \n    console.log(rule);\n    console.log(value);\n  }\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    return (\n      <div style={{display: \"table\", position: \"absolute\", height: \"100%\", width: \"100%\"}}>\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"50px\", marginBottom: \"10px\", textAlign: \"center\"}}>\n          <Card style={{display:\"inline-block\", textAlign: \"initial\"}}>\n            <Form onSubmit={this.handleSubmit}>\n              <div style={{\"textAlign\": \"center\"}}>\n                <Title level={3}>OLS Student Registration</Title>\n              </div>\n              <br />\n              <Form.Item label=\"E-mail\">\n                {getFieldDecorator('email', {\n                  rules: [\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input your E-mail!',\n                    },\n                  ],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label=\"Password\" hasFeedback>\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please input your password!',\n                    },\n                    {\n                      validator: this.validateToNextPassword,\n                    },\n                  ],\n                })(<Input.Password />)}\n              </Form.Item>\n              <Form.Item label=\"Confirm Password\" hasFeedback>\n                {getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please confirm your password!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Name&nbsp;\n                    <Tooltip title=\"First and Last Name?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('name', {\n                  rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Onelightsystem OLS experience&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('olsexperience', {\n                  rules: [{ required: true, message: 'Please input your experience!', whitespace: true }]\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value={\"New\"}>\n                        New \n                      </Radio>\n                      <Radio style={radioStyle} value={\"Received 1 ols introduction before\"}>\n                        Received 1 ols introduction before\n                      </Radio>\n                      <Radio style={radioStyle} value={\"PAST Initiated\"}>\n                        PAST Initiated\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    How did you find out about OLS&nbsp;\n                    <Tooltip title=\"OLS promoter - refferal ?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('reference', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    OLS eae | inuo &nbsp;\n                    <Tooltip title=\" OLS eae (teacher) OLS inuo (instructor) Each has it is own exchange measurement evaluation protocols to determinate proper OLS service fees energy exchange.\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('teacher', {\n                  rules: [{ required: true, message: 'Please select OLS official!', whitespace: true }],\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value={\"OLS aste. eae | Nazar Asvitlo  CA USA\"}>\n                        OLS aste. eae | Nazar Asvitlo  CA USA\n                      </Radio>\n                      <Radio style={radioStyle} value={\"OLS inuo | Rei-Wen Ho  教员 CA USA\"}>\n                        OLS inuo | Rei-Wen Ho  教员 CA USA\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Your LOCATION (country, city/town)&nbsp;\n                    <Tooltip title=\"Determines OLS service value fee* CA$190, Bay Area CA $240 (USA average $160); the rest of countries (Quality of Life GDP value assessment)\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('location', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Your Age&nbsp;\n                    <Tooltip title=\"Ages 6-12 require a parent\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('age', {\n                  rules: [{ required: true, message: 'Please input a number!', whitespace: true, type: 'number' }],\n                })(<InputNumber />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Meditation Experience&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('meditationexperience', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Any Health Issues?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('health', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    How soon can you start?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('start', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true, type: 'object' }],\n                })(\n                    <DatePicker onChange={this.setDate} />\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    What is a convenient time to receive OLS INTRO. / INITI?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('start', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true, type: 'object' }],\n                })(\n                    <TimePicker use12Hours format=\"h:mm a\"/>\n                  )\n                }\n              </Form.Item>\n              <Form.Item \n                label={\n                  <span>\n                    Agreement 1&nbsp;\n                    <Tooltip title=\"The OLS service fees based on assessment current provided Applicant up to date data (valid 9days after to re-evaluate fees will increse 10%) Expect official @mail (intro@ols-med.net) you will receive Assessed OLS servcie Fees to include 50% pre-payment to Scheduling OLS INTRO. \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement1', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    All the information submitted in this form is true and correct\n                  </Checkbox>\n                )}\n              </Form.Item>\n              <Form.Item \n                label={\n                  <span>\n                    Agreement 2&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement2', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    I have read and agreed to the <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">terms of service</a>\n                  </Checkbox>\n                )}\n              </Form.Item>\n              <Form.Item label={\n                  <span>\n                    Evaluation credits?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('credits', {\n                  rules: [{ type: \"array\" }], initialValue: [\"\"]}\n                )(\n                  <Checkbox.Group\n                    onChange={(values) => { console.log(values) }} \n                  >\n                    <div>\n                      <Checkbox value=\"10 Google Review\">(10)Had prior OLS experience?! leave a review on <a href=\"https://goo.gl/7tsW6L\">google</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"10 Lessons.com\">(10)Had prior OLS experience?! leave a review on our <a href=\"https://goo.gl/dhbvmX\">lessons</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Youtube\">(5)Subscribed on <a href=\"https://www.youtube.com/c/ONELIGHTSYSTEMOLSMeditation\"> Youtube</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 CrunchBase\">(5)Followed us on <a href=\"https://www.crunchbase.com/organization/onelightsystem-ols\">CrunchBase</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 LinkedIn\">(5)Followed us on <a href=\"https://www.linkedin.com/company/one-light-system/\">LinkedIn</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Owler\">(5)Followed us on <a href=\"https://www.owler.com/company/ols-med\">Owler and Weight</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Udemy\">Took our class on <a href=\"https://www.udemy.com/onelightsystem-olsm/?instructorPreviewMode=guest\">Udemy</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Facebook\">(5)Liked and share our <a href=\"https://www.facebook.com/onelightsystem/\">Facebook</a> page</Checkbox>\n                        <br />\n                      <Checkbox value=\"5 OLS Subscription\">(5)Took our OLS subscription <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfbLCi3OIfYXxriI1ddYm0ekzfFYpqhpExnheEyNUY2FfnEqw/viewform\">survey</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Offter something else\">I can offer something else</Checkbox>\n                        <br />\n                      <Checkbox value=\"Pay with crypto\">(1) will apply valid crypto currencies to pay for OLS service fees</Checkbox>\n                        <br />\n                      <Checkbox value=\"Create OLS Video\">(10)I will create video on the OLS experience</Checkbox>\n                        <br />\n                      <Checkbox checked={ true } value={ \"Other \" + this.state.checkboxOther }>Other: </Checkbox><Input style={{ width: 100, marginLeft: 10 }} onChange={ this.handleCheckboxOther }/>\n                    </div>\n                  </Checkbox.Group>\n                )}\n              </Form.Item>\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Register Applicant for a free assesment to receive OLS service intro and Initi\n                </Button>\n              </Form.Item>    \n            </Form>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\nexport default WrappedRegistrationForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport { FirebaseContext } from '../Firebase';\nimport ConstantsList from '../../constants/ConstantsList';\nimport {\n  Modal,\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker,\n  Typography\n} from 'antd';\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass RegistrationForm extends React.Component {\n  static contextType = FirebaseContext;\n\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1,\n    checkboxOther: \"\",\n    checkboxOtherChecked: false\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        // Add user data to data store\n        var data = {\n          credits: values.credits,\n          loc: values.location,\n          name: values.name,\n          olsexperience: values.olsexperience,\n          accounttype: values.accounttype,\n          reference: values.reference\n        }\n\n        // Create user account\n        // Ensure user agreed with ToS\n        if(values.agreement1 && values.agreement2) {\n          this.firebase.createUser(values.email, values.password)\n          .then((promRes) => {\n            var user = promRes.user;\n            // Send email verification and add user data to database\n            return Promise.all([\n              this.firebase.sendEmailVerification(),\n              this.firebase.createUserFireStore(data, ConstantsList.OLSME_COL, user.uid),\n              this.firebase.addToUserList(user.uid, { type: ConstantsList.OLSME_COL })\n            ]);\n           })\n          .then(() => {\n            this.firebase.fetchUserData(this.firebase.auth.currentUser.uid)\n            .then((doc) => {\n              this.firebase.dbUser = doc.data();\n              Modal.success({ title: \"Account Created!\", content: \"Your account has been successfully created. Please check your email to verify your account\" });\n            })\n          })\n          .catch(error => {\n            Modal.error({ title: \"Unable to Create Account\", content: error.message });\n            console.log(error); \n          });\n\n        }\n      } else {\n        console.log('Form validation error');\n      }\n    });\n  };\n\n  handleCheckboxOther = e => {\n    console.log(e.target.value);\n    this.setState({ checkboxOther: e.target.value });\n \n    if(e.target.value) {\n      this.setState({ checkboxOtherChecked: true });\n      console.log(\"target value set\");\n    } else {\n      console.log(\"target value error\");\n    }\n  }\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(\"TODO\");\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      radioValue0: e.target.value\n    });\n    this.props.form.setFieldsValue({radio:e.target.value})\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n    console.log(this.state);\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    const test = this;\n\n    return (\n      <div style={{display: \"table\", position: \"absolute\", height: \"100%\", width: \"100%\"}}>\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"50px\", marginBottom: \"10px\", textAlign: \"center\"}}>\n          <Card style={{display:\"inline-block\", textAlign: \"initial\"}}>\n            <Form onSubmit={this.handleSubmit}>\n              <div style={{\"textAlign\": \"center\"}}>\n                <Title level={3}>OLSME Registration</Title>\n              </div>\n              <br />\n              <Form.Item label=\"E-mail\">\n                {getFieldDecorator('email', {\n                  rules: [\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input your E-mail!',\n                    },\n                  ],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label=\"Password\" hasFeedback>\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please input your password!',\n                    },\n                    {\n                      validator: this.validateToNextPassword,\n                    },\n                  ],\n                })(<Input.Password />)}\n              </Form.Item>\n              <Form.Item label=\"Confirm Password\" hasFeedback>\n                {getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please confirm your password!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Name&nbsp;\n                    <Tooltip title=\"First and Last Name?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('name', {\n                  rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Onelightsystem OLS experience&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('olsexperience', {\n                  rules: [{ required: true, message: \"Please input your experience!\", whitespace: true }]\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value=\"New User\">\n                        New User\n                      </Radio>\n                      <Radio style={radioStyle} value=\"PAST Initiated OLS student\">\n                        PAST Initiated OLS student\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n\n<Form.      Item\n                label={\n                  <span>\n                    select OLSME usage account &nbsp;\n                    <Tooltip title=\" to evalueta OLSME services fees \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('accounttype', {\n                  rules: [{ required: true, message: \"Please input your OLSME Account Type\", whitespace: true }]\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value=\"Individual\">\n                        Individual \n                        <Tooltip title=\" (30 days free, after fees based on usage and GDP ) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip> \n                      </Radio>\n                      <Radio style={radioStyle} value=\"Corporation\">\n                        Corporation \n                        <Tooltip title=\" (Fees based on size and volume) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip> \n                      </Radio>\n                      <Radio style={radioStyle} value=\"Governmental Entity\">\n                        Govermental Entity \n                        <Tooltip title=\"  (Fees based on state and contry) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                        {this.state.radioValue0 === 6 ? <Input style={{ width: 100, marginLeft: 10 }} /> : null}\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n\n              <Form.Item\n                label={\n                  <span>\n                    How did you find out about OLS&nbsp;\n                    <Tooltip title=\"OLS promoter - refferal ?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('reference', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Your LOCATION (country, city/town)&nbsp;\n                    <Tooltip title=\"Determines OLS service value fee* CA$190, Bay Area CA $240 (USA average $160); the rest of countries (Quality of Life GDP value assessment)\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('location', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item \n                label={\n                  <span>\n                    Agreement 1&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement1', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    All the information submitted in this form is true and correct\n                  </Checkbox>\n                )}\n              </Form.Item>\n              <Form.Item \n                label={\n                  <span>\n                    Agreement 2&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement2', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    I have read and agreed to the <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">terms of service</a>\n                  </Checkbox>\n                )}\n              </Form.Item>     \n              <Form.Item\n                label={\n                  <span>\n                   Evaluation credits?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('credits', {\n                  rules: [{ type: \"array\" }], initialValue: [\"\"]}\n                )(\n                  <Checkbox.Group\n                    onChange={(values) => { console.log(values) }} \n                  >\n                    <div>\n                      <Checkbox value=\"10 Google Review\">(10)Had prior OLS experience?! leave a review on <a href=\"https://goo.gl/7tsW6L\">google</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"10 Lessons.com\">(10)Had prior OLS experience?! leave a review on our <a href=\"https://goo.gl/dhbvmX\">lessons</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Youtube\">(5)Subscribed on <a href=\"https://www.youtube.com/c/ONELIGHTSYSTEMOLSMeditation\"> Youtube</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 CrunchBase\">(5)Followed us on <a href=\"https://www.crunchbase.com/organization/onelightsystem-ols\">CrunchBase</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 LinkedIn\">(5)Followed us on <a href=\"https://www.linkedin.com/company/one-light-system/\">LinkedIn</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Owler\">(5)Followed us on <a href=\"https://www.owler.com/company/ols-med\">Owler and Weight</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Udemy\">Took our class on <a href=\"https://www.udemy.com/onelightsystem-olsm/?instructorPreviewMode=guest\">Udemy</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Facebook\">(5)Liked and share our <a href=\"https://www.facebook.com/onelightsystem/\">Facebook</a> page</Checkbox>\n                        <br />\n                      <Checkbox value=\"5 OLS Subscription\">(5)Took our OLS subscription <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfbLCi3OIfYXxriI1ddYm0ekzfFYpqhpExnheEyNUY2FfnEqw/viewform\">survey</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Offter something else\">I can offer something else</Checkbox>\n                        <br />\n                      <Checkbox value=\"Pay with crypto\">(1) will apply valid crypto currencies to pay for OLS service fees</Checkbox>\n                        <br />\n                      <Checkbox value=\"Create OLS Video\">(10)I will create video on the OLS experience</Checkbox>\n                        <br />\n                      <Checkbox checked={ true } value={ \"Other \" + this.state.checkboxOther }>Other: </Checkbox><Input style={{ width: 100, marginLeft: 10 }} onChange={ this.handleCheckboxOther }/>\n                    </div>\n                  </Checkbox.Group>\n                )}\n              </Form.Item>\n              <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  OLSME Signup\n                </Button>\n              </Form.Item> \n            </Form>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\nexport default WrappedRegistrationForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport { FirebaseContext } from '../Firebase';\nimport ConstantsList from '../../constants/ConstantsList';\nimport {\n  Modal,\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker,\n  Typography\n} from 'antd';\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass RegistrationForm extends React.Component {\n  static contextType = FirebaseContext;\n\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        // Prep Data\n        var data = {\n          name: values.name,\n          reference: values.reference,\n          loc: values.location,\n          olslmaccounttype: values.olslmaccounttype\n        }\n \n        // Create user account\n        // Ensure user agreed with ToS\n        if(values.agreement1 && values.agreement2) {\n          this.firebase.createUser(values.email, values.password)\n          .then((promRes) => {\n            var user = promRes.user;\n             // Send email verification and add user data to database\n             return Promise.all([\n               this.firebase.sendEmailVerification(),\n               this.firebase.createUserFireStore(data, ConstantsList.OLSLM_COL, user.uid),\n               this.firebase.addToUserList(user.uid, { type: ConstantsList.OLSLM_COL })\n             ]);\n           })\n          .then(() => {\n            this.firebase.fetchUserData(this.firebase.auth.currentUser.uid)\n            .then((doc) => {\n              this.firebase.dbUser = doc.data();\n              Modal.success({ title: \"Account Created!\", content: \"Your account has been successfully created. Please check your email to verify your account\" });\n            })\n          })\n          .catch(error => {\n            Modal.error({ title: \"Unable to Create Account\", content: error.message });\n            console.log(error); \n          });\n        }\n      } else {\n        console.log('Account creation error');\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(\"TODO\");\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      radioValue0: e.target.value\n    });\n    this.props.form.setFieldsValue({radio:e.target.value})\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n    console.log(this.state);\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    const test = this;\n\n    return (\n      <div style={{display: \"table\", position: \"absolute\", height: \"100%\", width: \"100%\"}}>\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"50px\", marginBottom: \"10px\", textAlign: \"center\"}}>\n          <Card style={{display:\"inline-block\", textAlign: \"initial\"}}>\n            <Form onSubmit={this.handleSubmit}>\n              <div style={{\"textAlign\": \"center\"}}>\n                <Title level={3}>OLSLM Registration</Title>\n              </div>\n              <br />\n              <Form.Item label=\"E-mail\">\n                {getFieldDecorator('email', {\n                  rules: [\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input your E-mail!',\n                    },\n                  ],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label=\"Password\" hasFeedback>\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please input your password!',\n                    },\n                    {\n                      validator: this.validateToNextPassword,\n                    },\n                  ],\n                })(<Input.Password />)}\n              </Form.Item>\n              <Form.Item label=\"Confirm Password\" hasFeedback>\n                {getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please confirm your password!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Name&nbsp;\n                    <Tooltip title=\"First and Last Name?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('name', {\n                  rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    How did you find out about OLS&nbsp;\n                    <Tooltip title=\"OLS promoter - ref. ?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('reference', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    select OLSLM options &nbsp;\n                    <Tooltip title=\" OLSLM LIGHT MINUTES OLS equity \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('olslmaccounttype', {\n                  rules: [{ required: true, whitespace: true }]\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value=\"OLSLM Investor\">\n                        OLSLM Investor\n                        <Tooltip title=\" (90, 180, 360 days Investing benefits) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip> \n                      </Radio>\n                      <Radio style={radioStyle} value=\"OLSLM buyer\">\n                        OLSLM buyer \n                        <Tooltip title=\" (min. 1LM category 9 or 10LM category 3) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                        {this.state.radioValue0 === 6 ? <Input style={{ width: 100, marginLeft: 10 }} /> : null}\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Your LOCATION (country, city/town)&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('location', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                    label={\n                      <span>\n                        Agreement 1&nbsp;\n                      </span>\n                    }\n              >\n                {getFieldDecorator('agreement1', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    I have read and agreed to the <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">terms of service</a>\n                  </Checkbox>,\n                )}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Agreement 2&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement2', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    All the information submitted in this form is true and correct\n                    <Tooltip title=\" after registration you will receive confirmation your account created \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </Checkbox>,\n                )}\n              </Form.Item>\n              <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Register\n                </Button>\n              </Form.Item>\n            </Form>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst OLSLMRegister = Form.create({ name: 'register' })(RegistrationForm);\nexport default OLSLMRegister;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport { FirebaseContext } from '../Firebase';\nimport ConstantsList from '../../constants/ConstantsList';\nimport {\n  Modal,\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker,\n  Typography\n} from 'antd';\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass RegistrationForm extends React.Component {\n  static contextType = FirebaseContext;\n\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        // Prep Data\n        var data = {\n          name: values.name,\n          reference: values.reference,\n          credits: values.credits,\n          olspaccounttype: values.olspaccounttype\n        }\n \n        // Create user account\n        // Ensure user agreed with ToS\n        if(values.agreement1 && values.agreement2) {\n          this.firebase.createUser(values.email, values.password)\n          .then((promRes) => {\n             var user = promRes.user;\n             // Send email verification and add user data to database\n             return Promise.all([\n               this.firebase.sendEmailVerification(),\n               this.firebase.createUserFireStore(data, ConstantsList.OLSP_COL, user.uid),\n               this.firebase.addToUserList(user.uid, { type: ConstantsList.OLSP_COL })\n             ]);\n           })\n          .then(() => {\n            this.firebase.fetchUserData(this.firebase.auth.currentUser.uid)\n            .then((doc) => {\n              this.firebase.dbUser = doc.data();\n              Modal.success({ title: \"Account Created!\", content: \"Your account has been successfully created. Please check your email to verify your account\" });\n            })\n          })\n          .catch(error => {\n            Modal.error({ title: \"Unable to Create Account\", content: error.message });\n            console.log(error); \n          });\n        }\n      } else {\n        console.log('Account creation error');\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(\"TODO\");\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      radioValue0: e.target.value\n    });\n    this.props.form.setFieldsValue({radio:e.target.value})\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n    console.log(this.state);\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    const test = this;\n\n    return (\n      <div style={{display: \"table\", position: \"absolute\", height: \"100%\", width: \"100%\"}}>\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"50px\", marginBottom: \"10px\", textAlign: \"center\"}}>\n          <Card style={{display:\"inline-block\", textAlign: \"initial\"}}>\n            <Form onSubmit={this.handleSubmit}>\n              <div style={{\"textAlign\": \"center\"}}>\n                <Title level={3}>OLS Promotor Registration</Title>\n              </div>\n              <br />\n              <Form.Item label=\"E-mail\">\n                {getFieldDecorator('email', {\n                  rules: [\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input your E-mail!',\n                    },\n                  ],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label=\"Password\" hasFeedback>\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please input your password!',\n                    },\n                    {\n                      validator: this.validateToNextPassword,\n                    },\n                  ],\n                })(<Input.Password />)}\n              </Form.Item>\n              <Form.Item label=\"Confirm Password\" hasFeedback>\n                {getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please confirm your password!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Name&nbsp;\n                    <Tooltip title=\"First and Last Name?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('name', {\n                  rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    How did you find out about OLS&nbsp;\n                    <Tooltip title=\"OLS promoter - refferal ?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('reference', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    select OLS user  &nbsp;\n                    <Tooltip title=\" free account \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('olspaccounttype', {\n                  rules: [{ required: true, message: \"Please choose an option!\", whitespace: true }]\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value=\"OLS promoter\">\n                        OLS promoter \n                        <Tooltip title=\" (promting OLS services for commission) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip> \n                      </Radio>\n                      <Radio style={radioStyle} value=\"using OLS services\">\n                         Using OLS services\n                        <Tooltip title=\" (ordering OLS official for pulling Light into my Location, ordering OLSM performance in my location) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                        {this.state.radioValue0 === 6 ? <Input style={{ width: 100, marginLeft: 10 }} /> : null}\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item \n                label={\n                  <span>\n                    Agreement 1&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement1', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    All the information submitted in this form is true and correct\n                  </Checkbox>\n                )}\n              </Form.Item>\n              <Form.Item \n                label={\n                  <span>\n                    Agreement 2&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement2', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    I have read and agreed to the <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">terms of service</a>\n                  </Checkbox>\n                )}\n              </Form.Item>\n              <Form.Item label={\n                  <span>\n                    Evaluation credits?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('credits', {\n                  rules: [{ type: \"array\" }], initialValue: [\"\"]}\n                )(\n                  <Checkbox.Group\n                    onChange={(values) => { console.log(values) }} \n                  >\n                    <div>\n                      <Checkbox value=\"10 Google Review\">(10)Had prior OLS experience?! leave a review on <a href=\"https://goo.gl/7tsW6L\">google</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"10 Lessons.com\">(10)Had prior OLS experience?! leave a review on our <a href=\"https://goo.gl/dhbvmX\">lessons</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Youtube\">(5)Subscribed on <a href=\"https://www.youtube.com/c/ONELIGHTSYSTEMOLSMeditation\"> Youtube</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 CrunchBase\">(5)Followed us on <a href=\"https://www.crunchbase.com/organization/onelightsystem-ols\">CrunchBase</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 LinkedIn\">(5)Followed us on <a href=\"https://www.linkedin.com/company/one-light-system/\">LinkedIn</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Owler\">(5)Followed us on <a href=\"https://www.owler.com/company/ols-med\">Owler and Weight</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Udemy\">Took our class on <a href=\"https://www.udemy.com/onelightsystem-olsm/?instructorPreviewMode=guest\">Udemy</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Facebook\">(5)Liked and share our <a href=\"https://www.facebook.com/onelightsystem/\">Facebook</a> page</Checkbox>\n                        <br />\n                      <Checkbox value=\"5 OLS Subscription\">(5)Took our OLS subscription <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfbLCi3OIfYXxriI1ddYm0ekzfFYpqhpExnheEyNUY2FfnEqw/viewform\">survey</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Offter something else\">I can offer something else</Checkbox>\n                        <br />\n                      <Checkbox value=\"Pay with crypto\">(1) will apply valid crypto currencies to pay for OLS service fees</Checkbox>\n                        <br />\n                      <Checkbox value=\"Create OLS Video\">(10)I will create video on the OLS experience</Checkbox>\n                        <br />\n                      <Checkbox checked={ true } value={ \"Other \" + this.state.checkboxOther }>Other: </Checkbox><Input style={{ width: 100, marginLeft: 10 }} onChange={ this.handleCheckboxOther }/>\n                    </div>\n                  </Checkbox.Group>\n                )}\n              </Form.Item>\n              <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Register\n                </Button>\n              </Form.Item>\n            </Form>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst OLSPRegister = Form.create({ name: 'register' })(RegistrationForm);\nexport default OLSPRegister;\n","import React, { Component } from 'react';\nimport { FirebaseContext } from '../Firebase';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Typography,\n  Modal,\n  Form,\n  InputNumber,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker\n} from 'antd';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\nconst { Title } = Typography;\n\nclass BasePasswordReset extends Component {\n  static contextType = FirebaseContext;\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n    this.backToHomePage = this.backToHomePage.bind(this);\n  }\n \n  backToHomePage() {\n    this.props.history.push(\"/\");\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        //Reset Password and redirect back to the login page\n        this.firebase.passwordReset(values.email)\n        .then(() => {\n          Modal.success({ title: \"Email Reset\", content: \"Check your email for instructions on how to reset your password\", onOk: this.backToHomePage });\n        })\n        .catch((error) => {\n          Modal.error({ title: \"Unable to Reset Password\", content: error.message });\n        })\n      } else {\n      \n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    return (\n      <div style={{position: \"absolute\", top: \"60%\" ,left: \"65%\", \"marginTop\": \"-350px\", \"marginLeft\": \"-650px\"}}>\n        <Card style={{ width: 850, marginBottom: 60. }}>\n          <div style={{\"textAlign\": \"center\"}}>\n            <Title level={3}>Reset Your Password</Title>\n          </div>\n          <br />\n          <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n            <Form.Item label=\"E-mail\">\n              {getFieldDecorator('email', {\n                rules: [\n                  {\n                    type: 'email',\n                    message: 'The input is not valid E-mail!',\n                  },\n                  {\n                    required: true,\n                    message: 'Please input your E-mail!',\n                  },\n                ],\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item {...tailFormItemLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Reset Password\n              </Button>\n            </Form.Item>    \n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst WrappedPasswordReset = Form.create({ name: 'passwordreset' })(BasePasswordReset);\nexport default withRouter(WrappedPasswordReset);\n","import React, { Component } from 'react';\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport { FirebaseContext } from '../Firebase';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport default class NavMenu extends Component {\n  static contextType = FirebaseContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: true,\n    };\n  }\n\n  onCollapse = collapsed => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n  \n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  onMenuClick = val => {\n    if(val.key == \"4\") {\n      this.firebase.signOutUser();\n    }\n  }\n\n  render() {\n    return (\n      <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse} theme=\"light\">\n        <div className=\"logo\" />\n        <Menu theme=\"light\" defaultSelectedKeys={['1']} mode=\"inline\" onClick={this.onMenuClick}>\n          <Menu.Item key=\"1\">\n          <Icon type=\"home\" />\n            <span>Home</span>\n            <Link to=\"/home/olsupdates\" />\n          </Menu.Item>\n          <Menu.Item key=\"olsstats\">\n          <Icon type=\"file\" />\n            <span>OLS stats</span>\n            <Link to=\"/home/olsstats\" />\n          </Menu.Item>\n          <Menu.Item key=\"profile\">\n            <Icon type=\"user\" />\n            <span>Profile</span>\n            <Link to=\"/home/profile\" />\n          </Menu.Item>\n          <Menu.Item key=\"3\">\n            <Icon type=\"setting\" />\n            <span>Support</span>\n            <Link to=\"/home/settings\" />\n          </Menu.Item>\n          <Menu.Item key=\"4\">\n            <Icon type=\"logout\" />\n            <span>Logout</span>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Profile extends Component {\n  render() {\n    return (\n      <h1>OLS Stats</h1>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class OLSUpdates extends Component {\n  render() {\n    return (\n      <h1>OLS Updates 785</h1>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport { FirebaseContext } from '../Firebase';\nimport {\n  Modal,\n  Form,\n  InputNumber,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker,\n  Typography\n} from 'antd';\nimport * as moment from 'moment'\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass Profile extends Component {\n  static contextType = FirebaseContext;\n\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1,\n    checkboxOther: \"\",\n    checkboxOtherChecked: false\n  };\n\n  handleCheckboxOther = e => {\n    console.log(e.target.value);\n    this.setState({ checkboxOther: e.target.value });\n \n    if(e.target.value) {\n      this.setState({ checkboxOtherChecked: true });\n      console.log(\"target value set\");\n    } else {\n      console.log(\"target value error\");\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        // Prep Data\n        var data = null;\n\n        if(this.state.mainAccountType === \"uOLSS\") {\n          data = {\n            name: values.name,\n            reference: values.reference,\n            credits: values.credits,\n            health: values.health,\n            loc: values.location,\n            meditationexperience: values.meditationexperience,\n            olsexperience: values.olsexperience,\n            teacher: values.teacher,\n            start: values.start.format()\n          }\n        } else if(this.state.mainAccountType === \"uOLSME\") {\n          data = {\n            credits: values.credits,\n            loc: values.location,\n            name: values.name,\n            olsexperience: values.olsexperience,\n            accounttype: values.accounttype,\n            reference: values.reference\n          }\n\n        } else if(this.state.mainAccountType === \"uOLSLM\") {\n          data = {\n            name: values.name,\n            reference: values.reference,\n            loc: values.location,\n            olslmaccounttype: values.olslmaccounttype\n          }\n        } else if(this.state.mainAccountType === \"uOLSP\") {\n          data = {\n            name: values.name,\n            reference: values.reference,\n            credits: values.credits,\n            olspaccounttype: values.olspaccounttype\n          }\n        }\n\n        // Update user data\n        if(data) {\n          this.firebase.updateUserData(data)\n          .then(() => {\n            Modal.success({ title: \"Profile Updated!\", content: \"Your profile has been updated\" });\n          });\n        }\n        \n      } else {\n        console.log('Account creation error');\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(e);\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  validateRadio = (rule, value, callback) => {\n    const form = this.props.form;\n   \n    console.log(rule);\n    console.log(value);\n  }\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n    this.firebase.fetchUserData(this.firebase.auth.currentUser.uid)\n    .then((doc) => {\n      this.firebase.dbUser = doc.data();\n      this.setState({ ...this.firebase.dbUser, mainAccountType: this.firebase.mainAccountType });\n    })\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    console.log(this.state)\n\n    return (\n      <div style={{ background: '#fff' }}>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Item\n            label={\n              <span>\n                Name&nbsp;\n                <Tooltip title=\"First and Last Name?\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            }\n          >\n            {getFieldDecorator('name', {\n              rules: [{ required: false, message: 'Please input your name!', whitespace: true }],\n              initialValue: this.state.name\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label={\n              <span>\n                How did you find out about OLS&nbsp;\n                <Tooltip title=\"OLS promoter - refferal ?\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            }\n          >\n            {getFieldDecorator('reference', {\n              rules: [{ required: false, message: 'Please input a value!', whitespace: true }],\n              initialValue: this.state.reference\n            })(<Input />)}\n          </Form.Item>\n          { this.state.mainAccountType === \"uOLSS\" &&\n            <div>\n              <Form.Item\n                label={\n                  <span>\n                    Onelightsystem OLS experience&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('olsexperience', {\n                  rules: [{ required: false, message: 'Please input your experience!', whitespace: true }],\n                  initialValue: this.state.olsexperience\n                })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value={\"New\"}>\n                        New \n                      </Radio>\n                      <Radio style={radioStyle} value={\"Received 1 ols introduction before\"}>\n                        Received 1 ols introduction before\n                      </Radio>\n                      <Radio style={radioStyle} value={\"PAST Initiated\"}>\n                        PAST Initiated\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    OLS eae | inuo &nbsp;\n                    <Tooltip title=\" OLS eae (teacher) OLS inuo (instructor) Each has it is own exchange measurement evaluation protocols to determinate proper OLS service fees energy exchange.\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('teacher', {\n                  rules: [{ required: false, message: 'Please select OLS official!', whitespace: true }],\n                  initialValue: this.state.teacher\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value={\"OLS aste. eae | Nazar Asvitlo  CA USA\"}>\n                        OLS aste. eae | Nazar Asvitlo  CA USA\n                      </Radio>\n                      <Radio style={radioStyle} value={\"OLS inuo | Rei-Wen Ho  教员 CA USA\"}>\n                        OLS inuo | Rei-Wen Ho  教员 CA USA\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Meditation Experience&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('meditationexperience', {\n                  rules: [{ required: false, message: 'Please input a value!', whitespace: true }],\n                  initialValue: this.state.meditationexperience\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Any Health Issues?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('health', {\n                  rules: [{ required: false, message: 'Please input a value!', whitespace: true }],\n                  initialValue: this.state.health\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    How soon can you start?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('start', {\n                  rules: [{ required: false, message: 'Please input a value!', whitespace: true, type: 'object' }],\n                  initialValue: moment(this.state.start)\n                })(\n                    <DatePicker onChange={this.setDate} />\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    What is a convenient time to receive OLS INTRO. / INITI?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('start', {\n                  rules: [{ required: false, message: 'Please input a value!', whitespace: true, type: 'object' }],\n                })(\n                    <TimePicker use12Hours format=\"h:mm a\"/>\n                  )\n                }\n              </Form.Item>\n            </div>\n          }\n          { this.state.mainAccountType === \"uOLSME\" &&\n            <div>\n              <Form.Item\n                label={\n                  <span>\n                    Onelightsystem OLS experience&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('olsexperience', {\n                  rules: [{ required: false, message: \"Please input your experience!\", whitespace: true }],\n                  initialValue: this.state.olsexperience\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value=\"New User\">\n                        New User\n                      </Radio>\n                      <Radio style={radioStyle} value=\"PAST Initiated OLS student\">\n                        PAST Initiated OLS student\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    select OLSME usage account &nbsp;\n                    <Tooltip title=\" to evalueta OLSME services fees \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('accounttype', {\n                  rules: [{ message: \"Please input your OLSME Account Type\", whitespace: true }],\n                  initialValue: this.state.accounttype\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value=\"Individual\">\n                        Individual \n                        <Tooltip title=\" (30 days free, after fees based on usage and GDP ) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip> \n                      </Radio>\n                      <Radio style={radioStyle} value=\"Corporation\">\n                        Corporation \n                        <Tooltip title=\" (Fees based on size and volume) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip> \n                      </Radio>\n                      <Radio style={radioStyle} value=\"Governmental Entity\">\n                        Govermental Entity \n                        <Tooltip title=\"  (Fees based on state and contry) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                        {this.state.radioValue0 === 6 ? <Input style={{ width: 100, marginLeft: 10 }} /> : null}\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    How did you find out about OLS&nbsp;\n                    <Tooltip title=\"OLS promoter - refferal ?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('reference', {\n                  rules: [{ message: 'Please input a value!', whitespace: true }],\n                  initialValue: this.state.reference\n                })(<Input />)}\n              </Form.Item>\n            </div>\n          }\n          {(this.state.mainAccountType === \"uOLSS\" || this.state.mainAccountType === \"uOLSME\" || this.state.mainAccountType === \"uOLSLM\") &&\n            <Form.Item\n              label={\n                <span>\n                  Your LOCATION (country, city/town)&nbsp;\n                  <Tooltip title=\"Determines OLS service value fee* CA$190, Bay Area CA $240 (USA average $160); the rest of countries (Quality of Life GDP value assessment)\">\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip>\n                </span>\n              }\n            >\n              {getFieldDecorator('location', {\n                rules: [{ message: 'Please input a value!', whitespace: true }],\n                initialValue: this.state.loc\n              })(<Input />)}\n            </Form.Item>\n          }\n          { this.state.mainAccountType === \"uOLSLM\" &&\n            <Form.Item\n              label={\n                <span>\n                  select OLSLM options &nbsp;\n                  <Tooltip title=\" OLSLM LIGHT MINUTES OLS equity \">\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip>\n                </span>\n              }\n            >\n              {getFieldDecorator('olslmaccounttype', {\n                rules: [{ required: false, whitespace: true }],\n                initialValue: this.state.olslmaccounttype\n                })(\n                  <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                    <Radio style={radioStyle} value=\"OLSLM Investor\">\n                      OLSLM Investor\n                      <Tooltip title=\" (90, 180, 360 days Investing benefits) \">\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip> \n                    </Radio>\n                    <Radio style={radioStyle} value=\"OLSLM buyer\">\n                      OLSLM buyer \n                      <Tooltip title=\" (min. 1LM category 9 or 10LM category 3) \">\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip>\n                      {this.state.radioValue0 === 6 ? <Input style={{ width: 100, marginLeft: 10 }} /> : null}\n                    </Radio>\n                  </Radio.Group>\n                )\n              }\n            </Form.Item>\n          }\n          {this.state.mainAccountType === \"uOLSP\" &&\n            <Form.Item\n              label={\n                <span>\n                  select OLS user  &nbsp;\n                  <Tooltip title=\" free account \">\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip>\n                </span>\n              }\n            >\n              {getFieldDecorator('olspaccounttype', {\n                rules: [{ required: true, message: \"Please choose an option!\", whitespace: true }],\n                initialValue: this.state.olspaccounttype\n                })(\n                  <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                    <Radio style={radioStyle} value=\"OLS promoter\">\n                      OLS promoter \n                      <Tooltip title=\" (promting OLS services for commission) \">\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip> \n                    </Radio>\n                    <Radio style={radioStyle} value=\"using OLS services\">\n                       Using OLS services\n                      <Tooltip title=\" (ordering OLS official for pulling Light into my Location, ordering OLSM performance in my location) \">\n                    <Icon type=\"question-circle-o\" />\n                  </Tooltip>\n                      {this.state.radioValue0 === 6 ? <Input style={{ width: 100, marginLeft: 10 }} /> : null}\n                    </Radio>\n                  </Radio.Group>\n                )\n              }\n            </Form.Item>\n          }\n          {(this.state.mainAccountType === \"uOLSS\" || this.state.mainAccountType === \"uOLSME\" || this.state.mainAccountType === \"uOLSP\") &&\n            <Form.Item label={\n                <span>\n                  Evaluation credits?&nbsp;\n                </span>\n              }\n            >\n              {getFieldDecorator('credits', {\n                rules: [{ type: \"array\" }], \n                initialValue: this.state.credits\n              })(\n                <Checkbox.Group\n                  onChange={(values) => { console.log(values) }} \n                >\n                  <div>\n                    <Checkbox value=\"10 Google Review\">(10)Had prior OLS experience?! leave a review on <a href=\"https://goo.gl/7tsW6L\">google</a></Checkbox>\n                      <br />\n                    <Checkbox value=\"10 Lessons.com\">(10)Had prior OLS experience?! leave a review on our <a href=\"https://goo.gl/dhbvmX\">lessons</a></Checkbox>\n                      <br />\n                    <Checkbox value=\"5 Youtube\">(5)Subscribed on <a href=\"https://www.youtube.com/c/ONELIGHTSYSTEMOLSMeditation\"> Youtube</a></Checkbox>\n                      <br />\n                    <Checkbox value=\"5 CrunchBase\">(5)Followed us on <a href=\"https://www.crunchbase.com/organization/onelightsystem-ols\">CrunchBase</a></Checkbox>\n                      <br />\n                    <Checkbox value=\"5 LinkedIn\">(5)Followed us on <a href=\"https://www.linkedin.com/company/one-light-system/\">LinkedIn</a></Checkbox>\n                      <br />\n                    <Checkbox value=\"5 Owler\">(5)Followed us on <a href=\"https://www.owler.com/company/ols-med\">Owler and Weight</a></Checkbox>\n                      <br />\n                    <Checkbox value=\"Udemy\">Took our class on <a href=\"https://www.udemy.com/onelightsystem-olsm/?instructorPreviewMode=guest\">Udemy</a></Checkbox>\n                      <br />\n                    <Checkbox value=\"5 Facebook\">(5)Liked and share our <a href=\"https://www.facebook.com/onelightsystem/\">Facebook</a> page</Checkbox>\n                      <br />\n                    <Checkbox value=\"5 OLS Subscription\">(5)Took our OLS subscription <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfbLCi3OIfYXxriI1ddYm0ekzfFYpqhpExnheEyNUY2FfnEqw/viewform\">survey</a></Checkbox>\n                      <br />\n                    <Checkbox value=\"Offter something else\">I can offer something else</Checkbox>\n                      <br />\n                    <Checkbox value=\"Pay with crypto\">(1) will apply valid crypto currencies to pay for OLS service fees</Checkbox>\n                      <br />\n                    <Checkbox value=\"Create OLS Video\">(10)I will create video on the OLS experience</Checkbox>\n                      <br />\n                    <Checkbox checked={ true } value={ \"Other \" + this.state.checkboxOther }>Other: </Checkbox><Input style={{ width: 100, marginLeft: 10 }} onChange={ this.handleCheckboxOther }/>\n                  </div>\n                </Checkbox.Group>\n              )}\n            </Form.Item>\n          }\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Update Profile\n            </Button>\n          </Form.Item>    \n        </Form>\n      </div>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(Profile);\nexport default WrappedRegistrationForm;\n","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n  render() {\n    return (\n      <h1>Settings</h1>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Layout, Menu, Breadcrumb, Icon, Typography } from 'antd';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport NavMenu from \"../navigation/NavMenu\";\nimport OLSStats from \"./OLSStats\";\nimport OLSUpdates from \"./OLSUpdates\";\nimport Profile from \"./Profile\";\nimport Settings from \"./Settings\";\nimport { FirebaseContext } from '../Firebase';\n\nconst { Title } = Typography;\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport default class Home extends Component {\n  static contextType = FirebaseContext;\n\n  state = {\n    collapsed: true,\n  };\n\n  onCollapse = collapsed => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n    console.log(this.firebase.dbUser);\n    console.log(this.firebase.auth.currentUser.uid);\n  }\n\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <NavMenu />\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <div style={{ textAlign: \"center\", alignSelf: \"center\" }}>\n              <Title level={3}>OLS onelightsystem Meditation</Title>\n            </div>          \n         </Header>\n          <Content style={{ margin: '0 16px' }}>\n            <Breadcrumb style={{ margin: '16px 0' }}>\n              <Breadcrumb.Item>OLS student</Breadcrumb.Item>\n              <Breadcrumb.Item>OLS updates</Breadcrumb.Item>\n              <Breadcrumb.Item>Submit OLS LM OLSM OLSME</Breadcrumb.Item>\n              <Breadcrumb.Item>Request OLS initi</Breadcrumb.Item>\n            </Breadcrumb>\n            <div style={{ padding: 24, background: '#fff', minHeight: \"100%\" }}>\n              <Route path=\"/home/olsupdates\" component={ OLSUpdates } />\n              <Route path=\"/home/olsstats\" component={ OLSStats } />\n              <Route path=\"/home/profile\" component={ Profile } />\n              <Route path=\"/home/settings\" component={ Settings } />\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}> <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">onelightsystem OLS ©2017-2019 </a> </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Privacy  extends Component {   \n    render() {\n        return ( \n            <h1>Test privacy disclosure</h1>\n        )\n    }\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, authenticated, path, ...props }) => {\n  console.log(authenticated)\n  return (\n    <Route\n      path={path}\n      {...props}\n      render={(props) => {\n        return authenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: {\n                prevLocation: path,\n                error: \"You need to login first!\",\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from 'react';\nimport { withRouter, BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport 'antd/dist/antd.css';\n\n// Custom Components\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport OLSSRegister from './components/auth/OLSSRegister';\nimport OLSMERegister from './components/auth/OLSMERegister';\nimport OLSLMRegister from './components/auth/OLSLMRegister';\nimport OLSPRegister from './components/auth/OLSPRegister';\nimport PasswordReset from './components/auth/PasswordReset';\nimport Home from './components/dashboard/Home';\nimport Privacy from './components/privacy/Privacy';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nimport ProtectedRoute from './components/navigation/ProtectedRoute';\n\nconst { Footer } = Layout;\n\n//function App() {\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    // Created firebase object as a singleton\n    this.firebase = new Firebase();\n\n    this.state = {\n      authenticated: false\n    }\n  }\n\n  componentDidMount() {\n    console.log(this.firebase);\n    var appThis= this;\n    var firebaseThis = this.firebase;\n    // Set listener for user authentication status\n    this.firebase.auth.onAuthStateChanged(function(user) {\n      if(user) {\n        console.log(user);\n        \n        //firebaseThis.setUserData(user.uid)\n        //.then((doc) => {\n        //  if(doc.exists) {\n        //    console.log(doc.data());\n        //    firebaseThis.dbUser = doc.data();\n\n        //    appThis.setState({ authenticated: true });\n        //    appThis.props.history.push(\"/home/olsupdates\");\n        //  }\n        //})\n        //.catch((error) => {\n        //  console.log(error);\n        //})\n\n        appThis.setState({ authenticated: true });\n        appThis.props.history.push(\"/home/olsupdates\");\n      } else {\n        appThis.setState({ authenticated: false });\n      }\n      console.log(\"authed\");\n    })\n  }\n\n  render() {\n    console.log(this.state);\n    //this.firebase.signOutUser();\n    return (\n      <FirebaseContext.Provider value={this.firebase}>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/olssregister\" component={OLSSRegister} />\n          <Route path=\"/olsmeregister\" component={OLSMERegister} />\n          <Route path=\"/olslmregister\" component={OLSLMRegister} />\n          <Route path=\"/olspregister\" component={OLSPRegister} />\n          <Route path=\"/passwordreset\" component={PasswordReset} />\n          <ProtectedRoute path=\"/home\" authenticated={this.state.authenticated} component={Home} />\n          <Route path=\"/privacydisclosure\" component={Privacy} />\n        </div>\n      </FirebaseContext.Provider>\n    );\n  }\n}\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}