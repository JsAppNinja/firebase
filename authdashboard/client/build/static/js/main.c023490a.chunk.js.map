{"version":3,"sources":["components/Firebase/FirebaseContext.js","components/Firebase/Firebase.js","components/Firebase/index.js","components/auth/Login.js","components/auth/Register.js","components/auth/OLSSRegister.js","components/auth/OLSMERegister.js","components/auth/OLSLMRegister.js","components/auth/OLSPRegister.js","components/auth/PasswordReset.js","components/navigation/NavMenu.js","components/dashboard/OLSStats.js","components/dashboard/OLSUpdates.js","components/dashboard/Profile.js","components/dashboard/Settings.js","components/dashboard/Home.js","components/privacy/Privacy.js","components/navigation/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","Object","classCallCheck","this","app","initializeApp","auth","db","firestore","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","currentUser","updatePassword","sendEmailVerification","data","collection","add","Title","Typography","BaseLogin","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","console","log","context","signInUser","username","then","catch","error","setState","getFieldDecorator","react_default","a","createElement","style","display","position","height","width","marginLeft","marginRight","marginTop","textAlign","card","es_form","onSubmit","className","paddingBottom","level","href","Item","rules","required","message","input","prefix","icon","type","color","placeholder","valuePropName","initialValue","es_checkbox","es_button","htmlType","Component","contextType","WrappedLogin","withRouter","Form","create","name","radioStyle","lineHeight","getFormType","Register","state","value","onChange","target","Register_Title","es_radio","Group","react_router_dom","to","size","Option","Select","AutoCompleteOption","AutoComplete","RegistrationForm","confirmDirty","autoCompleteResult","radioValue0","checkboxOther","checkboxOtherChecked","handleCheckboxOther","validateFieldsAndScroll","reference","age","credits","health","loc","location","meditationexperience","olsexperience","teacher","start","format","agreement1","agreement2","firebase","createUser","Promise","all","createUserFireStore","Modal","success","title","content","handleConfirmBlur","setDate","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","validateRadio","handleWebsiteChange","map","domain","concat","es_select","website","key","marginBottom","OLSSRegister_Title","label","hasFeedback","validator","Password","onBlur","tooltip","whitespace","input_number","date_picker","time_picker","use12Hours","checked","WrappedRegistrationForm","accounttype","setFieldsValue","radio","OLSMERegister_Option","OLSMERegister_AutoCompleteOption","OLSMERegister_Title","wrapperCol","xs","span","offset","sm","olslmaccounttype","OLSLMRegister_Option","OLSLMRegister_AutoCompleteOption","OLSLMRegister_Title","OLSLMRegister","olspaccounttype","OLSPRegister_Option","OLSPRegister_AutoCompleteOption","OLSPRegister_Title","OLSPRegister","BasePasswordReset","possibleConstructorReturn","getPrototypeOf","call","passwordReset","onOk","backToHomePage","bind","assertThisInitialized","history","push","PasswordReset_Option","PasswordReset_AutoCompleteOption","top","left","PasswordReset_Title","assign","labelCol","WrappedPasswordReset","Sider","Layout","Header","Content","Footer","NavMenu","Menu","SubMenu","onCollapse","collapsed","onMenuClick","val","signOutUser","collapsible","theme","menu","defaultSelectedKeys","mode","onClick","Profile","OLSUpdates","Profile_Option","Profile_AutoCompleteOption","background","Profile_Title","Settings","Home","layout","minHeight","NavMenu_NavMenu","Home_Header","padding","alignSelf","Home_Title","Home_Content","margin","breadcrumb","react_router","path","component","OLSStats","Home_Footer","Privacy","ProtectedRoute","_ref","authenticated","objectWithoutProperties","render","pathname","prevLocation","App","_Component","inherits","createClass","appThis","onAuthStateChanged","user","Firebase_FirebaseContext","Provider","exact","Login","OLSSRegister","OLSMERegister","PasswordReset","navigation_ProtectedRoute","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c023490a.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDIlmVETy3dJn4M2BiIFdgneT-suhpwYnE\",\n  authDomain: \"olsdata-550ld.firebaseapp.com\",\n  databaseURL: \"https://olsdata-550ld.firebaseio.com\",\n  projectId: \"olsdata-550ld\",\n  storageBucket: \"olsdata-550ld.appspot.com\",\n  messagingSenderId: \"482690254036\",\n  appId: \"1:482690254036:web:6f0ea140326ab07e\"\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(firebaseConfig);\n    this.auth = app.auth();\n    this.db = app.firestore();\n  }\n\n  // Auth\n  createUser(email, password) {\n    return this.auth.createUserWithEmailAndPassword(email, password);\n  }\n  \n  signInUser(email, password) {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  }\n\n  signOutUser() {\n    this.auth.signOut();\n  }\n\n  passwordReset(email) {\n    return this.auth.sendPasswordResetEmail(email);\n  }\n\n  passwordUpdate(password) {\n    return this.auth.currentUser.updatePassword(password);\n  }\n \n  sendEmailVerification() {\n    return this.auth.currentUser.sendEmailVerification();\n  }\n\n  // Firestore\n  createUserFireStore(data) {\n    return this.db.collection(\"users\").add(data);\n  }\n}\n\nexport default Firebase;\n","import FirebaseContext from './FirebaseContext';\nimport Firebase from './Firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext };\n","import React, { Component } from 'react';\nimport { Card, Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport '../../styles/css/login.css';\nimport { FirebaseContext } from '../Firebase';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst { Title } = Typography;\n\nclass BaseLogin extends Component {\n  static contextType = FirebaseContext;\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        // Now authenticate user\n        this.context.signInUser(values.username, values.password)\n        .then(() => {\n          console.log(\"Signed in\");\n        })\n        .catch(error => {\n          this.setState({ error });\n        });\n      } else {\n        console.log(\"Authentication Error\");\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div style={{display: \"table\", position: \"absolute\", height: \"100%\", width: \"100%\"}}>\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"100px\", textAlign: \"center\"}}>\n          <Card style={{display:\"inline-block\", textAlign: \"initial\"}}>\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n              <div style={{\"paddingBottom\": \"10px\", \"textAlign\": \"center\"}}>\n                <Title level={3}> <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">792.OLS onelightsystem Meditation® </a> </Title>\n              </div>\n              <Form.Item>\n                {getFieldDecorator('username', {\n                  rules: [{ required: true, message: 'Please input your username!' }],\n                })(\n                  <Input\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    placeholder=\"Username\"\n                  />,\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator('password', {\n                  rules: [{ required: true, message: 'Please input your Password!' }],\n                })(\n                  <Input\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  />,\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator('remember', {\n                  valuePropName: 'checked',\n                  initialValue: true,\n                })(<Checkbox>Remember me</Checkbox>)}\n                <a className=\"login-form-forgot\" href=\"/passwordreset\">\n                  Forgot password\n                </a>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                  Log in\n                </Button>\n                Or <a href=\"/register\">register [Beta]</a>\n              </Form.Item>\n            </Form>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedLogin = withRouter(Form.create({ name: 'login' })(BaseLogin));\nexport default WrappedLogin;\n","import React, { Component } from 'react';\nimport { Card, Radio, Input, Button, Typography } from 'antd';\nimport { Link } from \"react-router-dom\"; \n\nconst { Title } = Typography;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nconst getFormType = [\"/olssregister\", \"/olsmeregister\", \"/olslmregister\", \"/olspregister\"]\n\nexport default class Register extends Component {\n  state = {\n    value: 0,\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  getAccountType() {\n\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div style={{display: \"table\", position: \"absolute\", height: \"100%\", width: \"100%\"}}>\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"100px\", textAlign: \"center\"}}>\n          <Card style={{display:\"inline-block\", textAlign: \"initial\"}}>\n          <div>\n            <div style={{\"textAlign\": \"center\"}}>\n              <Title level={3}>Select an account type</Title>\n            </div>\n            <br />\n            <Radio.Group onChange={this.onChange} value={this.state.value}>\n              <Radio style={radioStyle} value={0}>\n                OLS Student (Intro and Initi assesment application)\n              </Radio>\n              <Radio style={radioStyle} value={1}>\n                OLSME user (Public 30 days free, corporates or government fees)\n              </Radio>\n              <Radio style={radioStyle} value={2}>\n                OLSLM (Investor or buyer)\n              </Radio>\n                <Radio style={radioStyle} value={3}>\n                OLS promoter (free account and other OLS sevices)\n              </Radio>\n            </Radio.Group>\n          </div>\n          <br />\n          <div style={{ \"textAlign\": \"center\" }}>\n            <Link to={getFormType[this.state.value]}>\n              <Button type=\"primary\" size=\"large\" style={{\"marginRight\": 20}}>Next</Button>\n            </Link>\n            <Link to=\"/\">\n              <Button size=\"large\">Back</Button>\n            </Link>\n          </div>\n        </Card>\n      </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport { FirebaseContext } from '../Firebase';\nimport {\n  Modal,\n  Form,\n  InputNumber,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker,\n  Typography\n} from 'antd';\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass RegistrationForm extends React.Component {\n  static contextType = FirebaseContext;\n\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1,\n    checkboxOther: \"\",\n    checkboxOtherChecked: false\n  };\n\n  handleCheckboxOther = e => {\n    console.log(e.target.value);\n    this.setState({ checkboxOther: e.target.value });\n \n    if(e.target.value) {\n      this.setState({ checkboxOtherChecked: true });\n      console.log(\"target value set\");\n    } else {\n      console.log(\"target value error\");\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        // Prep Data\n        var data = {\n          name: values.name,\n          reference: values.reference,\n          age: values.age,\n          credits: values.credits,\n          health: values.health,\n          loc: values.location,\n          meditationexperience: values.meditationexperience,\n          olsexperience: values.olsexperience,\n          teacher: values.teacher,\n          start: values.start.format()\n        }\n \n        // Create user account\n        // Ensure user agreed with ToS\n        if(values.agreement1 && values.agreement2) {\n          this.firebase.createUser(values.email, values.password)\n          .then(() => {\n             // Send email verification and add user data to database\n             return Promise.all([\n               this.firebase.sendEmailVerification(),\n               this.firebase.createUserFireStore(data)\n             ]);\n           })\n          .then(() => {\n            Modal.success({ title: \"Account Created!\", content: \"Your account has been successfully created. Please check your email to verify your account\" });\n          })\n          .catch(error => {\n            Modal.error({ title: \"Unable to Create Account\", content: error.message });\n            console.log(error); \n          });\n        }\n      } else {\n        console.log('Account creation error');\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(e);\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  validateRadio = (rule, value, callback) => {\n    const form = this.props.form;\n   \n    console.log(rule);\n    console.log(value);\n  }\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    return (\n      <div style={{display: \"table\", position: \"absolute\", height: \"100%\", width: \"100%\"}}>\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"50px\", marginBottom: \"10px\", textAlign: \"center\"}}>\n          <Card style={{display:\"inline-block\", textAlign: \"initial\"}}>\n            <Form onSubmit={this.handleSubmit}>\n              <div style={{\"textAlign\": \"center\"}}>\n                <Title level={3}>OLS Student Registration</Title>\n              </div>\n              <br />\n              <Form.Item label=\"E-mail\">\n                {getFieldDecorator('email', {\n                  rules: [\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input your E-mail!',\n                    },\n                  ],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label=\"Password\" hasFeedback>\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please input your password!',\n                    },\n                    {\n                      validator: this.validateToNextPassword,\n                    },\n                  ],\n                })(<Input.Password />)}\n              </Form.Item>\n              <Form.Item label=\"Confirm Password\" hasFeedback>\n                {getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please confirm your password!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Name&nbsp;\n                    <Tooltip title=\"First and Last Name?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('name', {\n                  rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Onelightsystem OLS experience&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('olsexperience', {\n                  rules: [{ required: true, message: 'Please input your experience!', whitespace: true }]\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value={\"New\"}>\n                        New \n                      </Radio>\n                      <Radio style={radioStyle} value={\"Received 1 ols introduction before\"}>\n                        Received 1 ols introduction before\n                      </Radio>\n                      <Radio style={radioStyle} value={\"PAST Initiated\"}>\n                        PAST Initiated\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    How did you find out about OLS&nbsp;\n                    <Tooltip title=\"OLS promoter - refferal ?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('reference', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    OLS eae | inuo &nbsp;\n                    <Tooltip title=\" OLS eae (teacher) OLS inuo (instructor) Each has it is own exchange measurement evaluation protocols to determinate proper OLS service fees energy exchange.\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('teacher', {\n                  rules: [{ required: true, message: 'Please select OLS official!', whitespace: true }],\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value={\"OLS aste. eae | Nazar Asvitlo  CA USA\"}>\n                        OLS aste. eae | Nazar Asvitlo  CA USA\n                      </Radio>\n                      <Radio style={radioStyle} value={\"OLS inuo | Rei-Wen Ho  教员 CA USA\"}>\n                        OLS inuo | Rei-Wen Ho  教员 CA USA\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Your LOCATION (country, city/town)&nbsp;\n                    <Tooltip title=\"Determines OLS service value fee* CA$190, Bay Area CA $240 (USA average $160); the rest of countries (Quality of Life GDP value assessment)\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('location', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Your Age&nbsp;\n                    <Tooltip title=\"Ages 6-12 require a parent\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('age', {\n                  rules: [{ required: true, message: 'Please input a number!', whitespace: true, type: 'number' }],\n                })(<InputNumber />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Meditation Experience&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('meditationexperience', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Any Health Issues?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('health', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    How soon can you start?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('start', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true, type: 'object' }],\n                })(\n                    <DatePicker onChange={this.setDate} />\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    What is a convenient time to receive OLS INTRO. / INITI?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('start', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true, type: 'object' }],\n                })(\n                    <TimePicker use12Hours format=\"h:mm a\"/>\n                  )\n                }\n              </Form.Item>\n              <Form.Item \n                label={\n                  <span>\n                    Agreement 1&nbsp;\n                    <Tooltip title=\"The OLS service fees based on assessment current provided Applicant up to date data (valid 9days after to re-evaluate fees will increse 10%) Expect official @mail (intro@ols-med.net) you will receive Assessed OLS servcie Fees to include 50% pre-payment to Scheduling OLS INTRO. \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement1', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    All the information submitted in this form is true and correct\n                  </Checkbox>\n                )}\n              </Form.Item>\n              <Form.Item \n                label={\n                  <span>\n                    Agreement 2&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement2', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    I have read and agreed to the <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">terms of service</a>\n                  </Checkbox>\n                )}\n              </Form.Item>\n              <Form.Item label={\n                  <span>\n                    Evaluation credits?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('credits', {\n                  rules: [{ type: \"array\" }], initialValue: [\"\"]}\n                )(\n                  <Checkbox.Group\n                    onChange={(values) => { console.log(values) }} \n                  >\n                    <div>\n                      <Checkbox value=\"10 Google Review\">(10)Had prior OLS experience?! leave a review on <a href=\"https://goo.gl/7tsW6L\">google</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"10 Lessons.com\">(10)Had prior OLS experience?! leave a review on our <a href=\"https://goo.gl/dhbvmX\">lessons</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Youtube\">(5)Subscribed on <a href=\"https://www.youtube.com/c/ONELIGHTSYSTEMOLSMeditation\"> Youtube</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 CrunchBase\">(5)Followed us on <a href=\"https://www.crunchbase.com/organization/onelightsystem-ols\">CrunchBase</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 LinkedIn\">(5)Followed us on <a href=\"https://www.linkedin.com/company/one-light-system/\">LinkedIn</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Owler\">(5)Followed us on <a href=\"https://www.owler.com/company/ols-med\">Owler and Weight</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Udemy\">Took our class on <a href=\"https://www.udemy.com/onelightsystem-olsm/?instructorPreviewMode=guest\">Udemy</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Facebook\">(5)Liked and share our <a href=\"https://www.facebook.com/onelightsystem/\">Facebook</a> page</Checkbox>\n                        <br />\n                      <Checkbox value=\"5 OLS Subscription\">(5)Took our OLS subscription <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfbLCi3OIfYXxriI1ddYm0ekzfFYpqhpExnheEyNUY2FfnEqw/viewform\">survey</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Offter something else\">I can offer something else</Checkbox>\n                        <br />\n                      <Checkbox value=\"Pay with crypto\">(1) will apply valid crypto currencies to pay for OLS service fees</Checkbox>\n                        <br />\n                      <Checkbox value=\"Create OLS Video\">(10)I will create video on the OLS experience</Checkbox>\n                        <br />\n                      <Checkbox checked={ true } value={ \"Other \" + this.state.checkboxOther }>Other: </Checkbox><Input style={{ width: 100, marginLeft: 10 }} onChange={ this.handleCheckboxOther }/>\n                    </div>\n                  </Checkbox.Group>\n                )}\n              </Form.Item>\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Register Applicant for a free assesment to receive OLS service intro and Initi\n                </Button>\n              </Form.Item>    \n            </Form>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\nexport default WrappedRegistrationForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport { FirebaseContext } from '../Firebase';\nimport {\n  Modal,\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker,\n  Typography\n} from 'antd';\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass RegistrationForm extends React.Component {\n  static contextType = FirebaseContext;\n\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1,\n    checkboxOther: \"\",\n    checkboxOtherChecked: false\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        // Create user account\n\n        // Ensure user agreed with ToS\n        if(values.agreement1 && values.agreement2) {\n          this.firebase.createUser(values.email, values.password)\n          .then(() => {\n             // Send email verification and add user data to database\n             return Promise.all([\n               this.firebase.sendEmailVerification(),\n               this.firebase.createUserFireStore(data)\n             ]);\n           })\n          .then(() => {\n            Modal.success({ title: \"Account Created!\", content: \"Your account has been successfully created. Please check your email to verify your account\" });\n          })\n          .catch(error => {\n            Modal.error({ title: \"Unable to Create Account\", content: error.message });\n            console.log(error); \n          });\n\n          // Add user data to data store\n          var data = {\n            credits: values.credits,\n            loc: values.location,\n            name: values.name,\n            olsexperience: values.olsexperience,\n            accounttype: values.accounttype\n          }\n        }\n      } else {\n        console.log('Form validation error');\n      }\n    });\n  };\n\n  handleCheckboxOther = e => {\n    console.log(e.target.value);\n    this.setState({ checkboxOther: e.target.value });\n \n    if(e.target.value) {\n      this.setState({ checkboxOtherChecked: true });\n      console.log(\"target value set\");\n    } else {\n      console.log(\"target value error\");\n    }\n  }\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(\"TODO\");\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      radioValue0: e.target.value\n    });\n    this.props.form.setFieldsValue({radio:e.target.value})\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n    console.log(this.state);\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    const test = this;\n\n    return (\n      <div style={{display: \"table\", position: \"absolute\", height: \"100%\", width: \"100%\"}}>\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"50px\", marginBottom: \"10px\", textAlign: \"center\"}}>\n          <Card style={{display:\"inline-block\", textAlign: \"initial\"}}>\n            <Form onSubmit={this.handleSubmit}>\n              <div style={{\"textAlign\": \"center\"}}>\n                <Title level={3}>OLSME Registration</Title>\n              </div>\n              <br />\n              <Form.Item label=\"E-mail\">\n                {getFieldDecorator('email', {\n                  rules: [\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input your E-mail!',\n                    },\n                  ],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label=\"Password\" hasFeedback>\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please input your password!',\n                    },\n                    {\n                      validator: this.validateToNextPassword,\n                    },\n                  ],\n                })(<Input.Password />)}\n              </Form.Item>\n              <Form.Item label=\"Confirm Password\" hasFeedback>\n                {getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please confirm your password!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Name&nbsp;\n                    <Tooltip title=\"First and Last Name?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('name', {\n                  rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Onelightsystem OLS experience&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('olsexperience', {\n                  rules: [{ required: true, message: \"Please input your experience!\", whitespace: true }]\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value=\"New User\">\n                        New User\n                      </Radio>\n                      <Radio style={radioStyle} value=\"PAST Initiated OLS student\">\n                        PAST Initiated OLS student\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n\n<Form.      Item\n                label={\n                  <span>\n                    select OLSME usage account &nbsp;\n                    <Tooltip title=\" to evalueta OLSME services fees \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('accounttype', {\n                  rules: [{ required: true, message: \"Please input your OLSME Account Type\", whitespace: true }]\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value=\"Individual\">\n                        Individual \n                        <Tooltip title=\" (30 days free, after fees based on usage and GDP ) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip> \n                      </Radio>\n                      <Radio style={radioStyle} value=\"Corporation\">\n                        Corporation \n                        <Tooltip title=\" (Fees based on size and volume) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip> \n                      </Radio>\n                      <Radio style={radioStyle} value=\"Governmental Entity\">\n                        Govermental Entity \n                        <Tooltip title=\"  (Fees based on state and contry) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                        {this.state.radioValue0 === 6 ? <Input style={{ width: 100, marginLeft: 10 }} /> : null}\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n\n              <Form.Item\n                label={\n                  <span>\n                    How did you find out about OLS&nbsp;\n                    <Tooltip title=\"OLS promoter - refferal ?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('reference', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Your LOCATION (country, city/town)&nbsp;\n                    <Tooltip title=\"Determines OLS service value fee* CA$190, Bay Area CA $240 (USA average $160); the rest of countries (Quality of Life GDP value assessment)\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('location', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item \n                label={\n                  <span>\n                    Agreement 1&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement1', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    All the information submitted in this form is true and correct\n                  </Checkbox>\n                )}\n              </Form.Item>\n              <Form.Item \n                label={\n                  <span>\n                    Agreement 2&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement2', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    I have read and agreed to the <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">terms of service</a>\n                  </Checkbox>\n                )}\n              </Form.Item>     \n              <Form.Item\n                label={\n                  <span>\n                   Evaluation credits?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('credits', {\n                  rules: [{ type: \"array\" }], initialValue: [\"\"]}\n                )(\n                  <Checkbox.Group\n                    onChange={(values) => { console.log(values) }} \n                  >\n                    <div>\n                      <Checkbox value=\"10 Google Review\">(10)Had prior OLS experience?! leave a review on <a href=\"https://goo.gl/7tsW6L\">google</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"10 Lessons.com\">(10)Had prior OLS experience?! leave a review on our <a href=\"https://goo.gl/dhbvmX\">lessons</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Youtube\">(5)Subscribed on <a href=\"https://www.youtube.com/c/ONELIGHTSYSTEMOLSMeditation\"> Youtube</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 CrunchBase\">(5)Followed us on <a href=\"https://www.crunchbase.com/organization/onelightsystem-ols\">CrunchBase</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 LinkedIn\">(5)Followed us on <a href=\"https://www.linkedin.com/company/one-light-system/\">LinkedIn</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Owler\">(5)Followed us on <a href=\"https://www.owler.com/company/ols-med\">Owler and Weight</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Udemy\">Took our class on <a href=\"https://www.udemy.com/onelightsystem-olsm/?instructorPreviewMode=guest\">Udemy</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Facebook\">(5)Liked and share our <a href=\"https://www.facebook.com/onelightsystem/\">Facebook</a> page</Checkbox>\n                        <br />\n                      <Checkbox value=\"5 OLS Subscription\">(5)Took our OLS subscription <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfbLCi3OIfYXxriI1ddYm0ekzfFYpqhpExnheEyNUY2FfnEqw/viewform\">survey</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Offter something else\">I can offer something else</Checkbox>\n                        <br />\n                      <Checkbox value=\"Pay with crypto\">(1) will apply valid crypto currencies to pay for OLS service fees</Checkbox>\n                        <br />\n                      <Checkbox value=\"Create OLS Video\">(10)I will create video on the OLS experience</Checkbox>\n                        <br />\n                      <Checkbox checked={ true } value={ \"Other \" + this.state.checkboxOther }>Other: </Checkbox><Input style={{ width: 100, marginLeft: 10 }} onChange={ this.handleCheckboxOther }/>\n                    </div>\n                  </Checkbox.Group>\n                )}\n              </Form.Item>\n              <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  OLSME Signup\n                </Button>\n              </Form.Item> \n            </Form>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\nexport default WrappedRegistrationForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport { FirebaseContext } from '../Firebase';\nimport {\n  Modal,\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker,\n  Typography\n} from 'antd';\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass RegistrationForm extends React.Component {\n  static contextType = FirebaseContext;\n\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        // Prep Data\n        var data = {\n          name: values.name,\n          reference: values.reference,\n          loc: values.location,\n          olslmaccounttype: values.olslmaccounttype\n        }\n \n        // Create user account\n        // Ensure user agreed with ToS\n        if(values.agreement1 && values.agreement2) {\n          this.firebase.createUser(values.email, values.password)\n          .then(() => {\n             // Send email verification and add user data to database\n             return Promise.all([\n               this.firebase.sendEmailVerification(),\n               this.firebase.createUserFireStore(data)\n             ]);\n           })\n          .then(() => {\n            Modal.success({ title: \"Account Created!\", content: \"Your account has been successfully created. Please check your email to verify your account\" });\n          })\n          .catch(error => {\n            Modal.error({ title: \"Unable to Create Account\", content: error.message });\n            console.log(error); \n          });\n        }\n      } else {\n        console.log('Account creation error');\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(\"TODO\");\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      radioValue0: e.target.value\n    });\n    this.props.form.setFieldsValue({radio:e.target.value})\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n    console.log(this.state);\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    const test = this;\n\n    return (\n      <div style={{display: \"table\", position: \"absolute\", height: \"100%\", width: \"100%\"}}>\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"50px\", marginBottom: \"10px\", textAlign: \"center\"}}>\n          <Card style={{display:\"inline-block\", textAlign: \"initial\"}}>\n            <Form onSubmit={this.handleSubmit}>\n              <div style={{\"textAlign\": \"center\"}}>\n                <Title level={3}>OLSLM Registration</Title>\n              </div>\n              <br />\n              <Form.Item label=\"E-mail\">\n                {getFieldDecorator('email', {\n                  rules: [\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input your E-mail!',\n                    },\n                  ],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label=\"Password\" hasFeedback>\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please input your password!',\n                    },\n                    {\n                      validator: this.validateToNextPassword,\n                    },\n                  ],\n                })(<Input.Password />)}\n              </Form.Item>\n              <Form.Item label=\"Confirm Password\" hasFeedback>\n                {getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please confirm your password!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Name&nbsp;\n                    <Tooltip title=\"First and Last Name?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('name', {\n                  rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    How did you find out about OLS&nbsp;\n                    <Tooltip title=\"OLS promoter - ref. ?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('reference', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    select OLSLM options &nbsp;\n                    <Tooltip title=\" OLSLM LIGHT MINUTES OLS equity \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('olslmaccounttype', {\n                  rules: [{ required: true, whitespace: true }]\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value=\"OLSLM Investor\">\n                        OLSLM Investor\n                        <Tooltip title=\" (90, 180, 360 days Investing benefits) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip> \n                      </Radio>\n                      <Radio style={radioStyle} value=\"OLSLM buyer\">\n                        OLSLM buyer \n                        <Tooltip title=\" (min. 1LM category 9 or 10LM category 3) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                        {this.state.radioValue0 === 6 ? <Input style={{ width: 100, marginLeft: 10 }} /> : null}\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Your LOCATION (country, city/town)&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('location', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                    label={\n                      <span>\n                        Agreement 1&nbsp;\n                      </span>\n                    }\n              >\n                {getFieldDecorator('agreement1', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    I have read and agreed to the <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">terms of service</a>\n                  </Checkbox>,\n                )}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Agreement 2&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement2', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    All the information submitted in this form is true and correct\n                    <Tooltip title=\" after registration you will receive confirmation your account created \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </Checkbox>,\n                )}\n              </Form.Item>\n              <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Register\n                </Button>\n              </Form.Item>\n            </Form>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst OLSLMRegister = Form.create({ name: 'register' })(RegistrationForm);\nexport default OLSLMRegister;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport { FirebaseContext } from '../Firebase';\nimport {\n  Modal,\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker,\n  Typography\n} from 'antd';\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass RegistrationForm extends React.Component {\n  static contextType = FirebaseContext;\n\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        // Prep Data\n        var data = {\n          name: values.name,\n          reference: values.reference,\n          credits: values.credits,\n          olspaccounttype: values.olspaccounttype\n        }\n \n        // Create user account\n        // Ensure user agreed with ToS\n        if(values.agreement1 && values.agreement2) {\n          this.firebase.createUser(values.email, values.password)\n          .then(() => {\n             // Send email verification and add user data to database\n             return Promise.all([\n               this.firebase.sendEmailVerification(),\n               this.firebase.createUserFireStore(data)\n             ]);\n           })\n          .then(() => {\n            Modal.success({ title: \"Account Created!\", content: \"Your account has been successfully created. Please check your email to verify your account\" });\n          })\n          .catch(error => {\n            Modal.error({ title: \"Unable to Create Account\", content: error.message });\n            console.log(error); \n          });\n        }\n      } else {\n        console.log('Account creation error');\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(\"TODO\");\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      radioValue0: e.target.value\n    });\n    this.props.form.setFieldsValue({radio:e.target.value})\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n    console.log(this.state);\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    const test = this;\n\n    return (\n      <div style={{display: \"table\", position: \"absolute\", height: \"100%\", width: \"100%\"}}>\n        <div style={{marginLeft: \"auto\", marginRight: \"auto\", marginTop: \"50px\", marginBottom: \"10px\", textAlign: \"center\"}}>\n          <Card style={{display:\"inline-block\", textAlign: \"initial\"}}>\n            <Form onSubmit={this.handleSubmit}>\n              <div style={{\"textAlign\": \"center\"}}>\n                <Title level={3}>OLS Promotor Registration</Title>\n              </div>\n              <br />\n              <Form.Item label=\"E-mail\">\n                {getFieldDecorator('email', {\n                  rules: [\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: true,\n                      message: 'Please input your E-mail!',\n                    },\n                  ],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label=\"Password\" hasFeedback>\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please input your password!',\n                    },\n                    {\n                      validator: this.validateToNextPassword,\n                    },\n                  ],\n                })(<Input.Password />)}\n              </Form.Item>\n              <Form.Item label=\"Confirm Password\" hasFeedback>\n                {getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: true,\n                      message: 'Please confirm your password!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Name&nbsp;\n                    <Tooltip title=\"First and Last Name?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('name', {\n                  rules: [{ required: true, message: 'Please input your name!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    How did you find out about OLS&nbsp;\n                    <Tooltip title=\"OLS promoter - refferal ?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('reference', {\n                  rules: [{ required: true, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    select OLS user  &nbsp;\n                    <Tooltip title=\" free account \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('olspaccounttype', {\n                  rules: [{ required: true, message: \"Please choose an option!\", whitespace: true }]\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value=\"OLS promoter\">\n                        OLS promoter \n                        <Tooltip title=\" (promting OLS services for commission) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip> \n                      </Radio>\n                      <Radio style={radioStyle} value=\"using OLS services\">\n                         Using OLS services\n                        <Tooltip title=\" (ordering OLS official for pulling Light into my Location, ordering OLSM performance in my location) \">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                        {this.state.radioValue0 === 6 ? <Input style={{ width: 100, marginLeft: 10 }} /> : null}\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item \n                label={\n                  <span>\n                    Agreement 1&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement1', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    All the information submitted in this form is true and correct\n                  </Checkbox>\n                )}\n              </Form.Item>\n              <Form.Item \n                label={\n                  <span>\n                    Agreement 2&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('agreement2', {\n                  valuePropName: 'checked', rules: [{ required: true, message: 'Please check the box'}]\n                })(\n                  <Checkbox>\n                    I have read and agreed to the <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">terms of service</a>\n                  </Checkbox>\n                )}\n              </Form.Item>\n              <Form.Item label={\n                  <span>\n                    Evaluation credits?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('credits', {\n                  rules: [{ type: \"array\" }], initialValue: [\"\"]}\n                )(\n                  <Checkbox.Group\n                    onChange={(values) => { console.log(values) }} \n                  >\n                    <div>\n                      <Checkbox value=\"10 Google Review\">(10)Had prior OLS experience?! leave a review on <a href=\"https://goo.gl/7tsW6L\">google</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"10 Lessons.com\">(10)Had prior OLS experience?! leave a review on our <a href=\"https://goo.gl/dhbvmX\">lessons</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Youtube\">(5)Subscribed on <a href=\"https://www.youtube.com/c/ONELIGHTSYSTEMOLSMeditation\"> Youtube</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 CrunchBase\">(5)Followed us on <a href=\"https://www.crunchbase.com/organization/onelightsystem-ols\">CrunchBase</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 LinkedIn\">(5)Followed us on <a href=\"https://www.linkedin.com/company/one-light-system/\">LinkedIn</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Owler\">(5)Followed us on <a href=\"https://www.owler.com/company/ols-med\">Owler and Weight</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Udemy\">Took our class on <a href=\"https://www.udemy.com/onelightsystem-olsm/?instructorPreviewMode=guest\">Udemy</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Facebook\">(5)Liked and share our <a href=\"https://www.facebook.com/onelightsystem/\">Facebook</a> page</Checkbox>\n                        <br />\n                      <Checkbox value=\"5 OLS Subscription\">(5)Took our OLS subscription <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfbLCi3OIfYXxriI1ddYm0ekzfFYpqhpExnheEyNUY2FfnEqw/viewform\">survey</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Offter something else\">I can offer something else</Checkbox>\n                        <br />\n                      <Checkbox value=\"Pay with crypto\">(1) will apply valid crypto currencies to pay for OLS service fees</Checkbox>\n                        <br />\n                      <Checkbox value=\"Create OLS Video\">(10)I will create video on the OLS experience</Checkbox>\n                        <br />\n                      <Checkbox checked={ true } value={ \"Other \" + this.state.checkboxOther }>Other: </Checkbox><Input style={{ width: 100, marginLeft: 10 }} onChange={ this.handleCheckboxOther }/>\n                    </div>\n                  </Checkbox.Group>\n                )}\n              </Form.Item>\n              <Form.Item {...tailFormItemLayout}>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Register\n                </Button>\n              </Form.Item>\n            </Form>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst OLSPRegister = Form.create({ name: 'register' })(RegistrationForm);\nexport default OLSPRegister;\n","import React, { Component } from 'react';\nimport { FirebaseContext } from '../Firebase';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Typography,\n  Modal,\n  Form,\n  InputNumber,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker\n} from 'antd';\n\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\nconst { Title } = Typography;\n\nclass BasePasswordReset extends Component {\n  static contextType = FirebaseContext;\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n    this.backToHomePage = this.backToHomePage.bind(this);\n  }\n \n  backToHomePage() {\n    this.props.history.push(\"/\");\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        //Reset Password and redirect back to the login page\n        this.firebase.passwordReset(values.email)\n        .then(() => {\n          Modal.success({ title: \"Email Reset\", content: \"Check your email for instructions on how to reset your password\", onOk: this.backToHomePage });\n        })\n        .catch((error) => {\n          Modal.error({ title: \"Unable to Reset Password\", content: error.message });\n        })\n      } else {\n      \n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    return (\n      <div style={{position: \"absolute\", top: \"60%\" ,left: \"65%\", \"marginTop\": \"-350px\", \"marginLeft\": \"-650px\"}}>\n        <Card style={{ width: 850, marginBottom: 60. }}>\n          <div style={{\"textAlign\": \"center\"}}>\n            <Title level={3}>Reset Your Password</Title>\n          </div>\n          <br />\n          <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n            <Form.Item label=\"E-mail\">\n              {getFieldDecorator('email', {\n                rules: [\n                  {\n                    type: 'email',\n                    message: 'The input is not valid E-mail!',\n                  },\n                  {\n                    required: true,\n                    message: 'Please input your E-mail!',\n                  },\n                ],\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item {...tailFormItemLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Reset Password\n              </Button>\n            </Form.Item>    \n          </Form>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst WrappedPasswordReset = Form.create({ name: 'passwordreset' })(BasePasswordReset);\nexport default withRouter(WrappedPasswordReset);\n","import React, { Component } from 'react';\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport { FirebaseContext } from '../Firebase';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport default class NavMenu extends Component {\n  static contextType = FirebaseContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: true,\n    };\n  }\n\n  onCollapse = collapsed => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n  \n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  onMenuClick = val => {\n    if(val.key == \"4\") {\n      this.firebase.signOutUser();\n    }\n  }\n\n  render() {\n    return (\n      <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse} theme=\"light\">\n        <div className=\"logo\" />\n        <Menu theme=\"light\" defaultSelectedKeys={['1']} mode=\"inline\" onClick={this.onMenuClick}>\n          <Menu.Item key=\"1\">\n          <Icon type=\"home\" />\n            <span>Home</span>\n            <Link to=\"/home/olsupdates\" />\n          </Menu.Item>\n          <Menu.Item key=\"olsstats\">\n          <Icon type=\"file\" />\n            <span>OLS stats</span>\n            <Link to=\"/home/olsstats\" />\n          </Menu.Item>\n          <Menu.Item key=\"profile\">\n            <Icon type=\"user\" />\n            <span>Profile</span>\n            <Link to=\"/home/profile\" />\n          </Menu.Item>\n          <Menu.Item key=\"3\">\n            <Icon type=\"setting\" />\n            <span>Support</span>\n            <Link to=\"/home/settings\" />\n          </Menu.Item>\n          <Menu.Item key=\"4\">\n            <Icon type=\"logout\" />\n            <span>Logout</span>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Profile extends Component {\n  render() {\n    return (\n      <h1>OLS Stats</h1>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class OLSUpdates extends Component {\n  \n  render() {\n    return (\n      <h1>OLS Updates 792</h1>\n      \n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport { Link } from \"react-router-dom\"; \nimport { FirebaseContext } from '../Firebase';\nimport {\n  Modal,\n  Form,\n  InputNumber,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n  Card,\n  Radio,\n  DatePicker,\n  TimePicker,\n  Typography\n} from 'antd';\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst radioStyle = {\n  display: 'block',\n  height: '30px',\n  lineHeight: '30px',\n};\n\nclass Profile extends Component {\n  static contextType = FirebaseContext;\n\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    radioValue0: 1,\n    checkboxOther: \"\",\n    checkboxOtherChecked: false\n  };\n\n  handleCheckboxOther = e => {\n    console.log(e.target.value);\n    this.setState({ checkboxOther: e.target.value });\n \n    if(e.target.value) {\n      this.setState({ checkboxOtherChecked: true });\n      console.log(\"target value set\");\n    } else {\n      console.log(\"target value error\");\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n\n        // Prep Data\n        var data = {\n          name: values.name,\n          reference: values.reference,\n          age: values.age,\n          credits: values.credits,\n          health: values.health,\n          loc: values.location,\n          meditationexperience: values.meditationexperience,\n          olsexperience: values.olsexperience,\n          teacher: values.teacher,\n          start: values.start.format()\n        }\n \n        // Create user account\n        // Ensure user agreed with ToS\n        //if(values.agreement1 && values.agreement2) {\n        //  this.firebase.createUser(values.email, values.password)\n        //  .then(() => {\n        //     // Send email verification and add user data to database\n        //     return Promise.all([\n        //       this.firebase.sendEmailVerification(),\n        //       this.firebase.createUserFireStore(data)\n        //     ]);\n        //   })\n        //  .then(() => {\n        //    Modal.success({ title: \"Account Created!\", content: \"Your account has been successfully created. Please check your email to verify your account\" });\n        //  })\n        //  .catch(error => {\n        //    Modal.error({ title: \"Unable to Create Account\", content: error.message });\n        //    console.log(error); \n        //  });\n        //}\n      } else {\n        console.log('Account creation error');\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  setDate = e => {\n    console.log(e);\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  validateRadio = (rule, value, callback) => {\n    const form = this.props.form;\n   \n    console.log(rule);\n    console.log(value);\n  }\n\n  handleWebsiteChange = value => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({ autoCompleteResult });\n  };\n\n  onChange = e => {\n    console.log('radio checked', e.target.value);\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  componentDidMount() {\n    this.firebase = this.context;\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>,\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => (\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n    return (\n      <div style={{ background: '#fff' }}>\n            <Form onSubmit={this.handleSubmit}>\n              <div style={{\"textAlign\": \"left\"}}>\n                <Title level={3}>User Profile</Title>\n              </div>\n              <br />\n              <Form.Item label=\"E-mail\">\n                {getFieldDecorator('email', {\n                  rules: [\n                    {\n                      type: 'email',\n                      message: 'The input is not valid E-mail!',\n                    },\n                    {\n                      required: false,\n                      message: 'Please input your E-mail!',\n                    },\n                  ],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item label=\"Password\" hasFeedback>\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: false,\n                      message: 'Please input your password!',\n                    },\n                    {\n                      validator: this.validateToNextPassword,\n                    },\n                  ],\n                })(<Input.Password />)}\n              </Form.Item>\n              <Form.Item label=\"Confirm Password\" hasFeedback>\n                {getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      required: false,\n                      message: 'Please confirm your password!',\n                    },\n                    {\n                      validator: this.compareToFirstPassword,\n                    },\n                  ],\n                })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Name&nbsp;\n                    <Tooltip title=\"First and Last Name?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('name', {\n                  rules: [{ required: false, message: 'Please input your name!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Onelightsystem OLS experience&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('olsexperience', {\n                  rules: [{ required: false, message: 'Please input your experience!', whitespace: true }]\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value={\"New\"}>\n                        New \n                      </Radio>\n                      <Radio style={radioStyle} value={\"Received 1 ols introduction before\"}>\n                        Received 1 ols introduction before\n                      </Radio>\n                      <Radio style={radioStyle} value={\"PAST Initiated\"}>\n                        PAST Initiated\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    How did you find out about OLS&nbsp;\n                    <Tooltip title=\"OLS promoter - refferal ?\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('reference', {\n                  rules: [{ required: false, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    OLS eae | inuo &nbsp;\n                    <Tooltip title=\" OLS eae (teacher) OLS inuo (instructor) Each has it is own exchange measurement evaluation protocols to determinate proper OLS service fees energy exchange.\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('teacher', {\n                  rules: [{ required: false, message: 'Please select OLS official!', whitespace: true }],\n                  })(\n                    <Radio.Group onChange={this.onChange} value={this.state.radioValue0}>\n                      <Radio style={radioStyle} value={\"OLS aste. eae | Nazar Asvitlo  CA USA\"}>\n                        OLS aste. eae | Nazar Asvitlo  CA USA\n                      </Radio>\n                      <Radio style={radioStyle} value={\"OLS inuo | Rei-Wen Ho  教员 CA USA\"}>\n                        OLS inuo | Rei-Wen Ho  教员 CA USA\n                      </Radio>\n                    </Radio.Group>\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Your LOCATION (country, city/town)&nbsp;\n                    <Tooltip title=\"Determines OLS service value fee* CA$190, Bay Area CA $240 (USA average $160); the rest of countries (Quality of Life GDP value assessment)\">\n                      <Icon type=\"question-circle-o\" />\n                    </Tooltip>\n                  </span>\n                }\n              >\n                {getFieldDecorator('location', {\n                  rules: [{ required: false, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Meditation Experience&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('meditationexperience', {\n                  rules: [{ required: false, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    Any Health Issues?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('health', {\n                  rules: [{ required: false, message: 'Please input a value!', whitespace: true }],\n                })(<Input />)}\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    How soon can you start?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('start', {\n                  rules: [{ required: false, message: 'Please input a value!', whitespace: true, type: 'object' }],\n                })(\n                    <DatePicker onChange={this.setDate} />\n                  )\n                }\n              </Form.Item>\n              <Form.Item\n                label={\n                  <span>\n                    What is a convenient time to receive OLS INTRO. / INITI?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('start', {\n                  rules: [{ required: false, message: 'Please input a value!', whitespace: true, type: 'object' }],\n                })(\n                    <TimePicker use12Hours format=\"h:mm a\"/>\n                  )\n                }\n              </Form.Item>\n              <Form.Item label={\n                  <span>\n                    Evaluation credits?&nbsp;\n                  </span>\n                }\n              >\n                {getFieldDecorator('credits', {\n                  rules: [{ type: \"array\" }], initialValue: [\"\"]}\n                )(\n                  <Checkbox.Group\n                    onChange={(values) => { console.log(values) }} \n                  >\n                    <div>\n                      <Checkbox value=\"10 Google Review\">(10)Had prior OLS experience?! leave a review on <a href=\"https://goo.gl/7tsW6L\">google</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"10 Lessons.com\">(10)Had prior OLS experience?! leave a review on our <a href=\"https://goo.gl/dhbvmX\">lessons</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Youtube\">(5)Subscribed on <a href=\"https://www.youtube.com/c/ONELIGHTSYSTEMOLSMeditation\"> Youtube</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 CrunchBase\">(5)Followed us on <a href=\"https://www.crunchbase.com/organization/onelightsystem-ols\">CrunchBase</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 LinkedIn\">(5)Followed us on <a href=\"https://www.linkedin.com/company/one-light-system/\">LinkedIn</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Owler\">(5)Followed us on <a href=\"https://www.owler.com/company/ols-med\">Owler and Weight</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Udemy\">Took our class on <a href=\"https://www.udemy.com/onelightsystem-olsm/?instructorPreviewMode=guest\">Udemy</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"5 Facebook\">(5)Liked and share our <a href=\"https://www.facebook.com/onelightsystem/\">Facebook</a> page</Checkbox>\n                        <br />\n                      <Checkbox value=\"5 OLS Subscription\">(5)Took our OLS subscription <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfbLCi3OIfYXxriI1ddYm0ekzfFYpqhpExnheEyNUY2FfnEqw/viewform\">survey</a></Checkbox>\n                        <br />\n                      <Checkbox value=\"Offter something else\">I can offer something else</Checkbox>\n                        <br />\n                      <Checkbox value=\"Pay with crypto\">(1) will apply valid crypto currencies to pay for OLS service fees</Checkbox>\n                        <br />\n                      <Checkbox value=\"Create OLS Video\">(10)I will create video on the OLS experience</Checkbox>\n                        <br />\n                      <Checkbox checked={ true } value={ \"Other \" + this.state.checkboxOther }>Other: </Checkbox><Input style={{ width: 100, marginLeft: 10 }} onChange={ this.handleCheckboxOther }/>\n                    </div>\n                  </Checkbox.Group>\n                )}\n              </Form.Item>\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Update Profile\n                </Button>\n              </Form.Item>    \n            </Form>\n      </div>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(Profile);\nexport default WrappedRegistrationForm;\n","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n  render() {\n    return (\n      <h1>Settings</h1>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Layout, Menu, Breadcrumb, Icon, Typography } from 'antd';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport NavMenu from \"../navigation/NavMenu\";\nimport OLSStats from \"./OLSStats\";\nimport OLSUpdates from \"./OLSUpdates\";\nimport Profile from \"./Profile\";\nimport Settings from \"./Settings\";\n\nconst { Title } = Typography;\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nexport default class Home extends Component {\n  state = {\n    collapsed: true,\n  };\n\n  onCollapse = collapsed => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <NavMenu />\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <div style={{ textAlign: \"center\", alignSelf: \"center\" }}>\n              <Title level={3}>OLS onelightsystem Meditation</Title>\n            </div>          \n         </Header>\n          <Content style={{ margin: '0 16px' }}>\n            <Breadcrumb style={{ margin: '16px 0' }}>\n              <Breadcrumb.Item>OLS student</Breadcrumb.Item>\n              <Breadcrumb.Item>OLS updates</Breadcrumb.Item>\n              <Breadcrumb.Item>Submit OLS LM OLSM OLSME</Breadcrumb.Item>\n              <Breadcrumb.Item>Request OLS initi</Breadcrumb.Item>\n            </Breadcrumb>\n            <div style={{ padding: 24, background: '#fff', minHeight: \"100%\" }}>\n              <Route path=\"/home/olsupdates\" component={ OLSUpdates } />\n              <Route path=\"/home/olsstats\" component={ OLSStats } />\n              <Route path=\"/home/profile\" component={ Profile } />\n              <Route path=\"/home/settings\" component={ Settings } />\n            </div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}> <a href=\"https://www.ols-med.net/ols-private-privacy-disclosure-updates-06-2019\">onelightsystem OLS ©2017-2019 </a> </Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Privacy  extends Component {   \n    render() {\n        return ( \n            <h1>Test privacy disclosure</h1>\n        )\n    }\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, authenticated, path, ...props }) => {\n  console.log(authenticated)\n  return (\n    <Route\n      path={path}\n      {...props}\n      render={(props) => {\n        return authenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: {\n                prevLocation: path,\n                error: \"You need to login first!\",\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from 'react';\nimport { withRouter, BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport 'antd/dist/antd.css';\n\n// Custom Components\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport OLSSRegister from './components/auth/OLSSRegister';\nimport OLSMERegister from './components/auth/OLSMERegister';\nimport OLSLMRegister from './components/auth/OLSLMRegister';\nimport OLSPRegister from './components/auth/OLSPRegister';\nimport PasswordReset from './components/auth/PasswordReset';\nimport Home from './components/dashboard/Home';\nimport Privacy from './components/privacy/Privacy';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nimport ProtectedRoute from './components/navigation/ProtectedRoute';\n\nconst { Footer } = Layout;\n\n//function App() {\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    // Created firebase object as a singleton\n    this.firebase = new Firebase();\n\n    this.state = {\n      authenticated: false\n    }\n  }\n\n  componentDidMount() {\n    console.log(this.firebase);\n    var appThis= this;\n    // Set listener for user authentication status\n    this.firebase.auth.onAuthStateChanged(function(user) {\n      if(user) {\n        appThis.setState({ authenticated: true });\n        appThis.props.history.push(\"/home/olsupdates\");\n      } else {\n        appThis.setState({ authenticated: false });\n      }\n      console.log(\"authed\");\n    })\n  }\n\n  render() {\n    console.log(this.state);\n    //this.firebase.signOutUser();\n    return (\n      <FirebaseContext.Provider value={this.firebase}>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/olssregister\" component={OLSSRegister} />\n          <Route path=\"/olsmeregister\" component={OLSMERegister} />\n          <Route path=\"/olslmregister\" component={OLSLMRegister} />\n          <Route path=\"/olspregister\" component={OLSPRegister} />\n          <Route path=\"/passwordreset\" component={PasswordReset} />\n          <ProtectedRoute path=\"/home\" authenticated={this.state.authenticated} component={Home} />\n          <Route path=\"/privacydisclosure\" component={Privacy} />\n        </div>\n      </FirebaseContext.Provider>\n    );\n  }\n}\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}